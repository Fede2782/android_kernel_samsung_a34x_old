/* SPDX-License-Identifier: GPL-2.0 */
/*
 * Copyright (c) 2022 Samsung Electronics Co., Ltd.
 */

#ifndef __HI1339_SENSOR_SETFILE_H__
#define __HI1339_SENSOR_SETFILE_H__

#define ENABLE_FRAME_COUNTER 1
#include "hi1339mipiraw_Sensor.h"
//#include "kd_imgsensor_adaptive_mipi.h"

/* sensor set-file: Hi-1339_setting_r1202_SEC2_20221111.xlsx */

kal_uint16 addr_data_init_hi1339[] = {
	0x0790, 0x0100,
	0x2000, 0x0000,
	0x2002, 0x0058,
	0x2006, 0x40B2,
	0x2008, 0xF310,
	0x200A, 0x84BC,
	0x200C, 0x40B2,
	0x200E, 0xF34A,
	0x2010, 0x84BA,
	0x2012, 0x40B2,
	0x2014, 0xF39A,
	0x2016, 0x84CA,
	0x2018, 0x40B2,
	0x201A, 0xF3A4,
	0x201C, 0x8476,
	0x201E, 0x40B2,
	0x2020, 0xF3C2,
	0x2022, 0x843A,
	0x2024, 0x40B2,
	0x2026, 0xF3C8,
	0x2028, 0x8450,
	0x202A, 0x40B2,
	0x202C, 0xF402,
	0x202E, 0x848C,
	0x2030, 0x40B2,
	0x2032, 0xF472,
	0x2034, 0x8464,
	0x2036, 0x40B2,
	0x2038, 0xF616,
	0x203A, 0x8490,
	0x203C, 0x40B2,
	0x203E, 0xFA84,
	0x2040, 0x8488,
	0x2042, 0x40B2,
	0x2044, 0xFC1A,
	0x2046, 0x8460,
	0x2048, 0x40B2,
	0x204A, 0xFC66,
	0x204C, 0x8446,
	0x204E, 0x40B2,
	0x2050, 0xFCBA,
	0x2052, 0x8452,
	0x2054, 0x40B2,
	0x2056, 0xFCC4,
	0x2058, 0x848A,
	0x205A, 0x40B2,
	0x205C, 0xFCF2,
	0x205E, 0x8486,
	0x2060, 0x40B2,
	0x2062, 0xFDD6,
	0x2064, 0x8436,
	0x2066, 0x40B2,
	0x2068, 0xB06E,
	0x206A, 0x8478,
	0x206C, 0x4130,
	0x206E, 0x120B,
	0x2070, 0x120A,
	0x2072, 0x421B,
	0x2074, 0x0E08,
	0x2076, 0x12B0,
	0x2078, 0xFB54,
	0x207A, 0x4B8A,
	0x207C, 0x0002,
	0x207E, 0x413A,
	0x2080, 0x413B,
	0x2082, 0x4130,
	0x2084, 0x7400,
	0x2086, 0x8050,
	0x2088, 0x30D8,
	0x208A, 0x0021,
	0x208C, 0x009D,
	0x208E, 0x005D,
	0x2090, 0x21C3,
	0x2092, 0x21C0,
	0x2094, 0x0058,
	0x2096, 0x0007,
	0x2098, 0x5020,
	0x209A, 0x5040,
	0x209C, 0x5060,
	0x209E, 0x0098,
	0x20A0, 0x0057,
	0x20A2, 0x7002,
	0x20A4, 0x4038,
	0x20A6, 0x0912,
	0x20A8, 0x15D3,
	0x20AA, 0x0000,
	0x20AC, 0x702C,
	0x20AE, 0x16D5,
	0x20B0, 0x20C3,
	0x20B2, 0x0058,
	0x20B4, 0x0001,
	0x20B6, 0x20A4,
	0x20B8, 0x700E,
	0x20BA, 0x2FA7,
	0x20BC, 0x5080,
	0x20BE, 0x50A0,
	0x20C0, 0x1805,
	0x20C2, 0x0008,
	0x20C4, 0x0020,
	0x20C6, 0x0303,
	0x20C8, 0x00C8,
	0x20CA, 0x0045,
	0x20CC, 0x0006,
	0x20CE, 0x7002,
	0x20D0, 0x0FDD,
	0x20D2, 0x005D,
	0x20D4, 0x21C3,
	0x20D6, 0x21C0,
	0x20D8, 0x21C3,
	0x20DA, 0x0058,
	0x20DC, 0x2014,
	0x20DE, 0x20A4,
	0x20E0, 0x704E,
	0x20E2, 0x2FA7,
	0x20E4, 0x50C0,
	0x20E6, 0x50E0,
	0x20E8, 0x0005,
	0x20EA, 0x0004,
	0x20EC, 0x2132,
	0x20EE, 0x7800,
	0x20F0, 0x020E,
	0x20F2, 0x0207,
	0x20F4, 0x0E78,
	0x20F6, 0x0002,
	0x20F8, 0x7E38,
	0x20FA, 0x0052,
	0x20FC, 0x7E38,
	0x20FE, 0x065E,
	0x2100, 0x703A,
	0x2102, 0x0E72,
	0x2104, 0x707A,
	0x2106, 0x0F62,
	0x2108, 0x7030,
	0x210A, 0x0E62,
	0x210C, 0x0FF0,
	0x210E, 0x0702,
	0x2110, 0x7400,
	0x2112, 0x2002,
	0x2114, 0x7023,
	0x2116, 0x0FC1,
	0x2118, 0x705E,
	0x211A, 0x0FC0,
	0x211C, 0x7800,
	0x211E, 0x0061,
	0x2120, 0x7400,
	0x2122, 0x2004,
	0x2124, 0x7023,
	0x2126, 0x0FC2,
	0x2128, 0x705E,
	0x212A, 0x0FC0,
	0x212C, 0x7800,
	0x212E, 0x7400,
	0x2130, 0x2008,
	0x2132, 0x7023,
	0x2134, 0x0FC3,
	0x2136, 0x705E,
	0x2138, 0x0FC0,
	0x213A, 0x7800,
	0x213C, 0x7400,
	0x213E, 0x0004,
	0x2140, 0x70DF,
	0x2142, 0x2F1F,
	0x2144, 0x7002,
	0x2146, 0x2F01,
	0x2148, 0x7800,
	0x214A, 0x7400,
	0x214C, 0x2010,
	0x214E, 0x7023,
	0x2150, 0x0FC4,
	0x2152, 0x705E,
	0x2154, 0x0FC0,
	0x2156, 0x7800,
	0x2158, 0x7400,
	0x215A, 0x0003,
	0x215C, 0x70DF,
	0x215E, 0x2F1F,
	0x2160, 0x7002,
	0x2162, 0x2F01,
	0x2164, 0x7800,
	0x2166, 0x7400,
	0x2168, 0x0002,
	0x216A, 0x70DF,
	0x216C, 0x2F1F,
	0x216E, 0x7002,
	0x2170, 0x2F01,
	0x2172, 0x7800,
	0x2174, 0x7400,
	0x2176, 0x2008,
	0x2178, 0x7023,
	0x217A, 0x0FC3,
	0x217C, 0x705E,
	0x217E, 0x0FC0,
	0x2180, 0x7800,
	0x2182, 0x0000,
	0x2184, 0xB084,
	0x2186, 0x0000,
	0x2188, 0xB084,
	0x218A, 0xB0F0,
	0x218C, 0x0002,
	0x218E, 0x0063,
	0x2190, 0xB110,
	0x2192, 0x0063,
	0x2194, 0xB120,
	0x2196, 0x0063,
	0x2198, 0xB14A,
	0x219A, 0x0063,
	0x219C, 0xB158,
	0x219E, 0xB11E,
	0x21A0, 0x0004,
	0x21A2, 0x0063,
	0x21A4, 0xB14A,
	0x21A6, 0x0063,
	0x21A8, 0xB174,
	0x21AA, 0x0063,
	0x21AC, 0xB110,
	0x21AE, 0x0063,
	0x21B0, 0xB166,
	0x21B2, 0xB11E,
	0x21B4, 0x0004,
	0x21B6, 0x0035,
	0x21B8, 0x0037,
	0x21BA, 0x003F,
	0x21BC, 0x0157,
	0x21BE, 0x0027,
	0x21C0, 0x0023,
	0x21C2, 0x004B,
	0x21C4, 0x01C9,
	0x21C6, 0x0091,
	0x21C8, 0x0035,
	0x21CA, 0x0034,
	0x21CC, 0xFFFF,
	0x21CE, 0x0028,
	0x21D0, 0x0050,
	0x21D2, 0x0000,
	0x21D4, 0x0000,
	0x21D6, 0xB1B6,
	0x21D8, 0xB182,
	0x21DA, 0xB1CE,
	0x363E, 0xBE38,
	0x3640, 0xD174,
	0x3642, 0xB1DA,
	0x3644, 0xD142,
	0x3646, 0xD154,
	0x3648, 0xB1D8,
	0x364A, 0x0000,
	0x364C, 0x0000,
	0x364E, 0x0000,
	0x3650, 0x0000,
	0x3652, 0x0000,
	0x3654, 0x0000,
	0x3656, 0x0000,
	0x3658, 0x0000,
	0x365A, 0x0000,
	0x3770, 0x0000,
	0x3772, 0x0000,
	0x3774, 0x0000,
	0x3776, 0x0000,
	0x2F78, 0x0042,
	0x2F7A, 0x004C,
	0x2F7C, 0x0078,
	0x2F7E, 0x00A1,
	0x2F80, 0x00A4,
	0x2F82, 0x07FF,
	0x2F84, 0x0042,
	0x2F86, 0x0048,
	0x2F88, 0x00A0,
	0x2F8A, 0x0106,
	0x2F8C, 0x01FD,
	0x2F8E, 0x07FF,
	0x2F90, 0x0042,
	0x2F92, 0x0048,
	0x2F94, 0x00A0,
	0x2F96, 0x0106,
	0x2F98, 0x01FD,
	0x2F9A, 0x07FF,
	0x2F9C, 0x0042,
	0x2F9E, 0x004C,
	0x2FA0, 0x005A,
	0x2FA2, 0x00A0,
	0x2FA4, 0x00A3,
	0x2FA6, 0x07FF,
	0x2FA8, 0x1014,
	0x2FAA, 0x0001,
	0x2FAC, 0x1007,
	0x2FAE, 0x0015,
	0x2FB0, 0x000A,
	0x2FB2, 0x1013,
	0x2FB4, 0x1002,
	0x2FB6, 0x0009,
	0x2FB8, 0x000E,
	0x2FBA, 0x0004,
	0x2FBC, 0x1013,
	0x2FBE, 0x1002,
	0x2FC0, 0x0009,
	0x2FC2, 0x000E,
	0x2FC4, 0x0004,
	0x2FC6, 0x1009,
	0x2FC8, 0x1009,
	0x2FCA, 0x1001,
	0x2FCC, 0x1027,
	0x2FCE, 0x000E,
	0x2FD0, 0x805A,
	0x2FD2, 0x8115,
	0x2FD4, 0x0025,
	0x2FD6, 0x8AA4,
	0x2FD8, 0x8637,
	0x2FDA, 0x0000,
	0x2FDC, 0x8035,
	0x2FDE, 0x8173,
	0x2FE0, 0x8535,
	0x2FE2, 0x8909,
	0x2FE4, 0x0816,
	0x2FE6, 0x0000,
	0x2FE8, 0x8035,
	0x2FEA, 0x8173,
	0x2FEC, 0x8535,
	0x2FEE, 0x8909,
	0x2FF0, 0x0816,
	0x2FF2, 0x0000,
	0x2FF4, 0x808F,
	0x2FF6, 0x803E,
	0x2FF8, 0x81F9,
	0x2FFA, 0x0C68,
	0x2FFC, 0x885A,
	0x2FFE, 0x0000,
	0x0266, 0x0001,
	0x026A, 0xFFFF,
	0x026C, 0x00FF,
	0x026E, 0x0000,
	0x0360, 0x1E8E,
	0x0384, 0x0004,
	0x0386, 0x0233,
	0x0388, 0x7133,
	0x038A, 0x02CD,
	0x038C, 0x4ECD,
	0x038E, 0x0041,
	0x0390, 0x0200,
	0x0392, 0x012C,
	0x0414, 0x0220,
	0x0450, 0x0002,
	0x0452, 0x0010,
	0x0600, 0x1130,
	0x0602, 0x3012,
	0x0604, 0x8048,
	0x060E, 0x0000,
	0x065E, 0x07FF,
	0x0660, 0x0002,
	0x0664, 0x0E0E,
	0x0686, 0x0240,
	0x0688, 0x00CA,
	0x068A, 0x0041,
	0x06AA, 0x00FF,
	0x06BE, 0x8600,
	0x0F06, 0x0002,
	0x0A02, 0x0084,
	0x0A04, 0x0094,
	0x0A06, 0x8181,
	0x0A08, 0x888F,
	0x0A0A, 0xA664,
	0x0A0C, 0xF051,
	0x0A0E, 0xEC00,
	0x0A12, 0x0000,
	0x0A16, 0xCCCC,
	0x0A18, 0x0008,
	0x0A1A, 0x7E34,
	0x0A1E, 0x018F,
	0x0C00, 0x0021,
	0x0C16, 0x0002,
	0x0708, 0x6FC0,
	0x070C, 0x0000,
	0x0780, 0x010F,
	0x1218, 0xF026,
	0x1034, 0x0600,
	0x1036, 0x0208,
	0x105A, 0x0001,
	0x027E, 0x0100,
};

kal_uint16 addr_data_preview_hi1339[] = {
	0x0B00, 0x0000,
	0x2E38, 0x0040,
	0x2E3A, 0x003D,
	0x2E3C, 0x003C,
	0x2E3E, 0x003A,
	0x2E40, 0x0039,
	0x2E42, 0x003C,
	0x2E44, 0x0044,
	0x2E46, 0x0044,
	0x2E48, 0x003A,
	0x2E4A, 0x003A,
	0x2E4C, 0x003D,
	0x2E4E, 0x003A,
	0x2E50, 0x0036,
	0x2E52, 0x0038,
	0x2E54, 0x003B,
	0x2E56, 0x0039,
	0x2E58, 0x0037,
	0x2E5A, 0x0034,
	0x2E5C, 0x0034,
	0x2E5E, 0x0030,
	0x2E60, 0x0034,
	0x2E62, 0x0031,
	0x2E64, 0x002F,
	0x2E66, 0x002C,
	0x2E68, 0x0030,
	0x2E6A, 0x002B,
	0x2E6C, 0x002D,
	0x2E6E, 0x0030,
	0x2E70, 0x0032,
	0x2E72, 0x002A,
	0x2E74, 0x002B,
	0x2E76, 0x002B,
	0x0204, 0x00C0,
	0x0206, 0x02E4,
	0x020A, 0x0CA8,
	0x020E, 0x0CAC,
	0x0224, 0x003A, // y_addr_start 58
	0x022A, 0x0017,
	0x022C, 0x0E1F,
	0x022E, 0x0C55, // y_addr_end 3157
	0x0234, 0x1111,
	0x0236, 0x1111,
	0x0238, 0x1111,
	0x023A, 0x1111,
	0x0250, 0x0000,
	0x0268, 0x00E5,
	0x0380, 0x01C2,
	0x0662, 0x1010,
	0x06BC, 0x85F0,
	0x06C0, 0x8380,
	0x06C2, 0x8380,
	0x0F00, 0x0000,
	0x0F04, 0x0030, // x_start 12
	0x0B02, 0x0000,
	0x0B04, 0x00DC,
	0x0B12, 0x1020, // x_output_size 4128
	0x0B14, 0x0C18, //y_output_size 3096
	0x0A10, 0x9C60,
	0x0C14, 0x0030,
	0x0C18, 0x1020,
	0x0C1A, 0x0C18,
	0x0730, 0x0101,
	0x0732, 0x0300,
	0x0734, 0x0300,
	0x0736, 0x0085,
	0x0738, 0x0005,
	0x073C, 0x0301,
	0x0740, 0x0100,
	0x0742, 0x0300,
	0x0744, 0x0300,
	0x0746, 0x00AC,
	0x0748, 0x0003,
	0x074A, 0x0700,
	0x074C, 0x8000,
	0x074E, 0x0000,
	0x0750, 0x0000,
	0x1200, 0xF5FD,
	0x1000, 0x0300,
#if ENABLE_FRAME_COUNTER == 1
	0x1002, 0xC211,
#else
	0x1002, 0xC311,
#endif
	0x1004, 0x2BB0,
	0x1010, 0x0A96,
	0x1012, 0x0047,
	0x1020, 0xC108,
	0x1022, 0x0A29,
	0x1024, 0x050A,
	0x1026, 0x0F0E,
	0x1028, 0x180C,
	0x102A, 0x0F0A,
	0x102C, 0x1800,
	0x103E, 0x0001,
	0x1066, 0x0AC1,
	0x1A00, 0x0140,
};

kal_uint16 addr_data_capture_hi1339[] = {
	0x0B00, 0x0000,
	0x2E38, 0x0040,
	0x2E3A, 0x003D,
	0x2E3C, 0x003C,
	0x2E3E, 0x003A,
	0x2E40, 0x0039,
	0x2E42, 0x003C,
	0x2E44, 0x0044,
	0x2E46, 0x0044,
	0x2E48, 0x003A,
	0x2E4A, 0x003A,
	0x2E4C, 0x003D,
	0x2E4E, 0x003A,
	0x2E50, 0x0036,
	0x2E52, 0x0038,
	0x2E54, 0x003B,
	0x2E56, 0x0039,
	0x2E58, 0x0037,
	0x2E5A, 0x0034,
	0x2E5C, 0x0034,
	0x2E5E, 0x0030,
	0x2E60, 0x0034,
	0x2E62, 0x0031,
	0x2E64, 0x002F,
	0x2E66, 0x002C,
	0x2E68, 0x0030,
	0x2E6A, 0x002B,
	0x2E6C, 0x002D,
	0x2E6E, 0x0030,
	0x2E70, 0x0032,
	0x2E72, 0x002A,
	0x2E74, 0x002B,
	0x2E76, 0x002B,
	0x0204, 0x00C0,
	0x0206, 0x02E4,
	0x020A, 0x0CA8,
	0x020E, 0x0CAC,
	0x0224, 0x003A,
	0x022A, 0x0017,
	0x022C, 0x0E1F,
	0x022E, 0x0C55,
	0x0234, 0x1111,
	0x0236, 0x1111,
	0x0238, 0x1111,
	0x023A, 0x1111,
	0x0250, 0x0000,
	0x0268, 0x00E5,
	0x0380, 0x01C2,
	0x0662, 0x1010,
	0x06BC, 0x85F0,
	0x06C0, 0x8380,
	0x06C2, 0x8380,
	0x0F00, 0x0000,
	0x0F04, 0x0030,
	0x0B02, 0x0000,
	0x0B04, 0x00DC,
	0x0B12, 0x1020,
	0x0B14, 0x0C18,
	0x0A10, 0x9C60,
	0x0C14, 0x0030,
	0x0C18, 0x1020,
	0x0C1A, 0x0C18,
	0x0730, 0x0101,
	0x0732, 0x0300,
	0x0734, 0x0300,
	0x0736, 0x0085,
	0x0738, 0x0005,
	0x073C, 0x0301,
	0x0740, 0x0100,
	0x0742, 0x0300,
	0x0744, 0x0300,
	0x0746, 0x00AC,
	0x0748, 0x0003,
	0x074A, 0x0700,
	0x074C, 0x8000,
	0x074E, 0x0000,
	0x0750, 0x0000,
	0x1200, 0xF5FD,
	0x1000, 0x0300,
#if ENABLE_FRAME_COUNTER == 1
	0x1002, 0xC211,
#else
	0x1002, 0xC311,
#endif
	0x1004, 0x2BB0,
	0x1010, 0x0A96,
	0x1012, 0x0047,
	0x1020, 0xC108,
	0x1022, 0x0A29,
	0x1024, 0x050A,
	0x1026, 0x0F0E,
	0x1028, 0x180C,
	0x102A, 0x0F0A,
	0x102C, 0x1800,
	0x103E, 0x0001,
	0x1066, 0x0AC1,
	0x1A00, 0x0140,
};

kal_uint16 addr_data_video_hi1339[] = {
	0x0B00, 0x0000,
	0x2E38, 0x0040,
	0x2E3A, 0x003D,
	0x2E3C, 0x003C,
	0x2E3E, 0x003A,
	0x2E40, 0x0039,
	0x2E42, 0x003C,
	0x2E44, 0x0044,
	0x2E46, 0x0044,
	0x2E48, 0x003A,
	0x2E4A, 0x003A,
	0x2E4C, 0x003D,
	0x2E4E, 0x003A,
	0x2E50, 0x0036,
	0x2E52, 0x0038,
	0x2E54, 0x003B,
	0x2E56, 0x0039,
	0x2E58, 0x0037,
	0x2E5A, 0x0034,
	0x2E5C, 0x0034,
	0x2E5E, 0x0030,
	0x2E60, 0x0034,
	0x2E62, 0x0031,
	0x2E64, 0x002F,
	0x2E66, 0x002C,
	0x2E68, 0x0030,
	0x2E6A, 0x002B,
	0x2E6C, 0x002D,
	0x2E6E, 0x0030,
	0x2E70, 0x0032,
	0x2E72, 0x002A,
	0x2E74, 0x002B,
	0x2E76, 0x002B,
	0x0204, 0x00C0,
	0x0206, 0x03D9,
	0x020A, 0x0981,
	0x020E, 0x0985,
	0x0224, 0x01BC,
	0x022A, 0x0017,
	0x022C, 0x0E1B,
	0x022E, 0x0AD3,
	0x0234, 0x1111,
	0x0236, 0x1111,
	0x0238, 0x1111,
	0x023A, 0x1111,
	0x0250, 0x0000,
	0x0268, 0x00AE,
	0x0380, 0x01C2,
	0x0662, 0x1010,
	0x06BC, 0x85F0,
	0x06C0, 0x8380,
	0x06C2, 0x8380,
	0x0F00, 0x0000,
	0x0F04, 0x0030,
	0x0B02, 0x0000,
	0x0B04, 0x00DC,
	0x0B12, 0x1020,
	0x0B14, 0x0914,
	0x0A10, 0x9C60,
	0x0C14, 0x0030,
	0x0C18, 0x1020,
	0x0C1A, 0x0914,
	0x0730, 0x0101,
	0x0732, 0x0300,
	0x0734, 0x0300,
	0x0736, 0x0085,
	0x0738, 0x0005,
	0x073C, 0x0301,
	0x0740, 0x0100,
	0x0742, 0x0300,
	0x0744, 0x0300,
	0x0746, 0x00AC,
	0x0748, 0x0003,
	0x074A, 0x0700,
	0x074C, 0x8000,
	0x074E, 0x0000,
	0x0750, 0x0000,
	0x1200, 0xF5FD,
	0x1000, 0x0300,
#if ENABLE_FRAME_COUNTER == 1
	0x1002, 0xC211,
#else
	0x1002, 0xC311,
#endif
	0x1004, 0x2BB0,
	0x1010, 0x0E4C,
	0x1012, 0x0222,
	0x1020, 0xC108,
	0x1022, 0x0A29,
	0x1024, 0x050A,
	0x1026, 0x0F0E,
	0x1028, 0x180C,
	0x102A, 0x0F0A,
	0x102C, 0x1800,
	0x103E, 0x0001,
	0x1066, 0x0E77,
	0x1A00, 0x0140,
};

kal_uint16 addr_data_custom1_hi1339[] = {
	0x0B00, 0x0000,
	0x2E38, 0x0040,
	0x2E3A, 0x003B,
	0x2E3C, 0x0035,
	0x2E3E, 0x0036,
	0x2E40, 0x002F,
	0x2E42, 0x002C,
	0x2E44, 0x002D,
	0x2E46, 0x0029,
	0x2E48, 0x0022,
	0x2E4A, 0x0023,
	0x2E4C, 0x001E,
	0x2E4E, 0x0016,
	0x2E50, 0x0014,
	0x2E52, 0x000E,
	0x2E54, 0x0006,
	0x2E56, 0x0006,
	0x2E58, 0x0000,
	0x2E5A, 0x0000,
	0x2E5C, 0x0000,
	0x2E5E, 0x0000,
	0x2E60, 0x0000,
	0x2E62, 0x0000,
	0x2E64, 0x0000,
	0x2E66, 0x0000,
	0x2E68, 0x0000,
	0x2E6A, 0x0000,
	0x2E6C, 0x0000,
	0x2E6E, 0x0000,
	0x2E70, 0x0000,
	0x2E72, 0x0000,
	0x2E74, 0x0000,
	0x2E76, 0x0000,
	0x0204, 0x03C0,
	0x0206, 0x02E7,
	0x020A, 0x032F,
	0x020E, 0x1616, // 0x1616 for 60 fps, 0x0333 for 118.39 fps
	0x0224, 0x0038,
	0x022A, 0x0011,
	0x022C, 0x0E49,
	0x022E, 0x0C51,
	0x0234, 0x7711,
	0x0236, 0x7711,
	0x0238, 0x7711,
	0x023A, 0x4444,
	0x0250, 0x0000,
	0x0268, 0x00E4,
	0x0380, 0x0142,
	0x0662, 0x0E0E,
	0x06BC, 0x8600,
	0x06C0, 0x8600,
	0x06C2, 0x8600,
	0x0F00, 0x0C00,
	0x0F04, 0x000E,
	0x0B02, 0x0000,
	0x0B04, 0x00FC,
	0x0B12, 0x0404,
	0x0B14, 0x0304,
	0x0A10, 0xA440,
	0x0C14, 0x0038,
	0x0C18, 0x1010,
	0x0C1A, 0x0304,
	0x0730, 0x0101,
	0x0732, 0x0300,
	0x0734, 0x0300,
	0x0736, 0x0085,
	0x0738, 0x0005,
	0x073C, 0x0301,
	0x0740, 0x0100,
	0x0742, 0x0300,
	0x0744, 0x0300,
	0x0746, 0x00AC,
	0x0748, 0x0003,
	0x074A, 0x0700,
	0x074C, 0x8300,
	0x074E, 0x0000,
	0x0750, 0x0000,
	0x1200, 0xF5FD,
	0x1000, 0x0300,
#if ENABLE_FRAME_COUNTER == 1
	0x1002, 0xC211,
#else
	0x1002, 0xC311,
#endif
	0x1004, 0x2BB0,
	0x1010, 0x0287,
	0x1012, 0x0002,
	0x1020, 0xC102,
	0x1022, 0x020A,
	0x1024, 0x0303,
	0x1026, 0x0407,
	0x1028, 0x0C05,
	0x102A, 0x0F0A,
	0x102C, 0x0900,
	0x103E, 0x0301,
	0x1066, 0x0293,
	0x1A00, 0x0440,
};

kal_uint16 addr_data_custom2_hi1339[] = {
	0x0B00, 0x0000,
	0x2E38, 0x0040,
	0x2E3A, 0x003D,
	0x2E3C, 0x003C,
	0x2E3E, 0x003A,
	0x2E40, 0x0039,
	0x2E42, 0x003C,
	0x2E44, 0x0044,
	0x2E46, 0x0044,
	0x2E48, 0x003A,
	0x2E4A, 0x003A,
	0x2E4C, 0x003D,
	0x2E4E, 0x003A,
	0x2E50, 0x0036,
	0x2E52, 0x0038,
	0x2E54, 0x003B,
	0x2E56, 0x0039,
	0x2E58, 0x0037,
	0x2E5A, 0x0034,
	0x2E5C, 0x0034,
	0x2E5E, 0x0030,
	0x2E60, 0x0034,
	0x2E62, 0x0031,
	0x2E64, 0x002F,
	0x2E66, 0x002C,
	0x2E68, 0x0030,
	0x2E6A, 0x002B,
	0x2E6C, 0x002D,
	0x2E6E, 0x0030,
	0x2E70, 0x0032,
	0x2E72, 0x002A,
	0x2E74, 0x002B,
	0x2E76, 0x002B,
	0x0204, 0x00C0,
	0x0206, 0x037F,
	0x020A, 0x0A76,
	0x020E, 0x0A7A,
	0x0224, 0x0148,
	0x022A, 0x0017,
	0x022C, 0x0E1F,
	0x022E, 0x0B47,
	0x0234, 0x1111,
	0x0236, 0x1111,
	0x0238, 0x1111,
	0x023A, 0x1111,
	0x0250, 0x0000,
	0x0268, 0x00BF,
	0x0380, 0x01C2,
	0x0662, 0x1010,
	0x06BC, 0x85F0,
	0x06C0, 0x8380,
	0x06C2, 0x8380,
	0x0F00, 0x0000,
	0x0F04, 0x0100,
	0x0B02, 0x0000,
	0x0B04, 0x00DC,
	0x0B12, 0x0E80,
	0x0B14, 0x09FC,
	0x0A10, 0x9C60,
	0x0C14, 0x0100,
	0x0C18, 0x0E80,
	0x0C1A, 0x09FC,
	0x0730, 0x0101,
	0x0732, 0x0300,
	0x0734, 0x0300,
	0x0736, 0x0085,
	0x0738, 0x0005,
	0x073C, 0x0301,
	0x0740, 0x0100,
	0x0742, 0x0300,
	0x0744, 0x0300,
	0x0746, 0x00AC,
	0x0748, 0x0003,
	0x074A, 0x0700,
	0x074C, 0x8000,
	0x074E, 0x0000,
	0x0750, 0x0000,
	0x1200, 0xF5FD,
	0x1000, 0x0300,
#if ENABLE_FRAME_COUNTER == 1
	0x1002, 0xC211,
#else
	0x1002, 0xC311,
#endif
	0x1004, 0x2BB0,
	0x1010, 0x0CF0,
	0x1012, 0x01F6,
	0x1020, 0xC108,
	0x1022, 0x0A29,
	0x1024, 0x050A,
	0x1026, 0x0F0E,
	0x1028, 0x180C,
	0x102A, 0x0F0A,
	0x102C, 0x1800,
	0x103E, 0x0001,
	0x1066, 0x0D1B,
	0x1A00, 0x0140,
};

kal_uint16 addr_data_custom3_hi1339[] = {
	0x0B00, 0x0000,
	0x2E38, 0x0040,
	0x2E3A, 0x003D,
	0x2E3C, 0x003C,
	0x2E3E, 0x003A,
	0x2E40, 0x0039,
	0x2E42, 0x003C,
	0x2E44, 0x0044,
	0x2E46, 0x0044,
	0x2E48, 0x003A,
	0x2E4A, 0x003A,
	0x2E4C, 0x003D,
	0x2E4E, 0x003A,
	0x2E50, 0x0036,
	0x2E52, 0x0038,
	0x2E54, 0x003B,
	0x2E56, 0x0039,
	0x2E58, 0x0037,
	0x2E5A, 0x0034,
	0x2E5C, 0x0034,
	0x2E5E, 0x0030,
	0x2E60, 0x0034,
	0x2E62, 0x0031,
	0x2E64, 0x002F,
	0x2E66, 0x002C,
	0x2E68, 0x0030,
	0x2E6A, 0x002B,
	0x2E6C, 0x002D,
	0x2E6E, 0x0030,
	0x2E70, 0x0032,
	0x2E72, 0x002A,
	0x2E74, 0x002B,
	0x2E76, 0x002B,
	0x0204, 0x00C0,
	0x0206, 0x037F,
	0x020A, 0x0A76,
	0x020E, 0x0A7A,
	0x0224, 0x0148,
	0x022A, 0x0017,
	0x022C, 0x0E1F,
	0x022E, 0x0B47,
	0x0234, 0x1111,
	0x0236, 0x1111,
	0x0238, 0x1111,
	0x023A, 0x1111,
	0x0250, 0x0000,
	0x0268, 0x00BF,
	0x0380, 0x01C2,
	0x0662, 0x1010,
	0x06BC, 0x85F0,
	0x06C0, 0x8380,
	0x06C2, 0x8380,
	0x0F00, 0x0000,
	0x0F04, 0x0100,
	0x0B02, 0x0000,
	0x0B04, 0x00DC,
	0x0B12, 0x0E80,
	0x0B14, 0x09FC,
	0x0A10, 0x9C60,
	0x0C14, 0x0100,
	0x0C18, 0x0E80,
	0x0C1A, 0x09FC,
	0x0730, 0x0101,
	0x0732, 0x0300,
	0x0734, 0x0300,
	0x0736, 0x0085,
	0x0738, 0x0005,
	0x073C, 0x0301,
	0x0740, 0x0100,
	0x0742, 0x0300,
	0x0744, 0x0300,
	0x0746, 0x00AC,
	0x0748, 0x0003,
	0x074A, 0x0700,
	0x074C, 0x8000,
	0x074E, 0x0000,
	0x0750, 0x0000,
	0x1200, 0xF5FD,
	0x1000, 0x0300,
#if ENABLE_FRAME_COUNTER == 1
	0x1002, 0xC211,
#else
	0x1002, 0xC311,
#endif
	0x1004, 0x2BB0,
	0x1010, 0x0CF0,
	0x1012, 0x01F6,
	0x1020, 0xC108,
	0x1022, 0x0A29,
	0x1024, 0x050A,
	0x1026, 0x0F0E,
	0x1028, 0x180C,
	0x102A, 0x0F0A,
	0x102C, 0x1800,
	0x103E, 0x0001,
	0x1066, 0x0D1B,
	0x1A00, 0x0140,
};

kal_uint16 addr_data_custom4_hi1339[] = {
	0x0B00, 0x0000,
	0x2E38, 0x0040,
	0x2E3A, 0x003D,
	0x2E3C, 0x003C,
	0x2E3E, 0x003A,
	0x2E40, 0x0039,
	0x2E42, 0x003C,
	0x2E44, 0x0044,
	0x2E46, 0x0044,
	0x2E48, 0x003A,
	0x2E4A, 0x003A,
	0x2E4C, 0x003D,
	0x2E4E, 0x003A,
	0x2E50, 0x0036,
	0x2E52, 0x0038,
	0x2E54, 0x003B,
	0x2E56, 0x0039,
	0x2E58, 0x0037,
	0x2E5A, 0x0034,
	0x2E5C, 0x0034,
	0x2E5E, 0x0030,
	0x2E60, 0x0034,
	0x2E62, 0x0031,
	0x2E64, 0x002F,
	0x2E66, 0x002C,
	0x2E68, 0x0030,
	0x2E6A, 0x002B,
	0x2E6C, 0x002D,
	0x2E6E, 0x0030,
	0x2E70, 0x0032,
	0x2E72, 0x002A,
	0x2E74, 0x002B,
	0x2E76, 0x002B,
	0x0204, 0x00C0,
	0x0206, 0x037F,
	0x020A, 0x0A76,
	0x020E, 0x0A7A,
	0x0224, 0x0148,
	0x022A, 0x0017,
	0x022C, 0x0E1F,
	0x022E, 0x0B47,
	0x0234, 0x1111,
	0x0236, 0x1111,
	0x0238, 0x1111,
	0x023A, 0x1111,
	0x0250, 0x0000,
	0x0268, 0x00BF,
	0x0380, 0x01C2,
	0x0662, 0x1010,
	0x06BC, 0x85F0,
	0x06C0, 0x8380,
	0x06C2, 0x8380,
	0x0F00, 0x0000,
	0x0F04, 0x0100,
	0x0B02, 0x0000,
	0x0B04, 0x00DC,
	0x0B12, 0x0E80,
	0x0B14, 0x09FC,
	0x0A10, 0x9C60,
	0x0C14, 0x0100,
	0x0C18, 0x0E80,
	0x0C1A, 0x09FC,
	0x0730, 0x0101,
	0x0732, 0x0300,
	0x0734, 0x0300,
	0x0736, 0x0085,
	0x0738, 0x0005,
	0x073C, 0x0301,
	0x0740, 0x0100,
	0x0742, 0x0300,
	0x0744, 0x0300,
	0x0746, 0x00AC,
	0x0748, 0x0003,
	0x074A, 0x0700,
	0x074C, 0x8000,
	0x074E, 0x0000,
	0x0750, 0x0000,
	0x1200, 0xF5FD,
	0x1000, 0x0300,
#if ENABLE_FRAME_COUNTER == 1
	0x1002, 0xC211,
#else
	0x1002, 0xC311,
#endif
	0x1004, 0x2BB0,
	0x1010, 0x0CF0,
	0x1012, 0x01F6,
	0x1020, 0xC108,
	0x1022, 0x0A29,
	0x1024, 0x050A,
	0x1026, 0x0F0E,
	0x1028, 0x180C,
	0x102A, 0x0F0A,
	0x102C, 0x1800,
	0x103E, 0x0001,
	0x1066, 0x0D1B,
	0x1A00, 0x0140,
};

struct setfile_mode_info hi1339_setfile_info[IMGSENSOR_MODE_MAX] = {
	{addr_data_init_hi1339,    ARRAY_SIZE(addr_data_init_hi1339),    "init"},
	{addr_data_preview_hi1339, ARRAY_SIZE(addr_data_preview_hi1339), "4:3 mode"},
	{addr_data_capture_hi1339, ARRAY_SIZE(addr_data_capture_hi1339), "capture"},
	{addr_data_video_hi1339,   ARRAY_SIZE(addr_data_video_hi1339),   "16:9 mode"},
	{NULL,                     0,                                    "not used"},
	{NULL,                     0,                                    "not used"},
	{addr_data_custom1_hi1339, ARRAY_SIZE(addr_data_custom1_hi1339), "fast AE"},
	{addr_data_custom2_hi1339, ARRAY_SIZE(addr_data_custom2_hi1339), "FOV 68 4:3"},
	{addr_data_custom3_hi1339, ARRAY_SIZE(addr_data_custom3_hi1339), "FOV 68 4:3"},
	{addr_data_custom4_hi1339, ARRAY_SIZE(addr_data_custom4_hi1339), "FOV 68 16:9"},
	{NULL,                     0,                                    "not used"}
};

kal_uint16 hi1339_otp_init_addr_data[] = {
	0x0790, 0x0100,
	0x2000, 0x0000,
	0x2002, 0x0058,
	0x2006, 0x40B2,
	0x2008, 0xB00E,
	0x200A, 0x8450,
	0x200C, 0x4130,
	0x200E, 0x90F2,
	0x2010, 0x0010,
	0x2012, 0x0260,
	0x2014, 0x2002,
	0x2016, 0x1292,
	0x2018, 0x84BC,
	0x201A, 0x1292,
	0x201C, 0xD020,
	0x201E, 0x4130,
	0x027E, 0x0100,
};

#endif
