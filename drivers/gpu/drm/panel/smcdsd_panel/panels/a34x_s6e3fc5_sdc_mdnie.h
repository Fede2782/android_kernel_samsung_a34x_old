/* SPDX-License-Identifier: GPL-2.0 */
#ifndef __S6E3FC5_SDC_00_MDNIE_H__
#define __S6E3FC5_SDC_00_MDNIE_H__

/* 2019.12.06 */

/* SCR Position can be different each panel */
static struct mdnie_scr_info scr_info = {
	.index = 2,
	.cr = 4,		/* ASCR_WIDE_CR[7:0] */
	.wr = 22,		/* ASCR_WIDE_WR[7:0] */
	.wg = 23,		/* ASCR_WIDE_WG[7:0] */
	.wb = 24		/* ASCR_WIDE_WB[7:0] */
};

static struct mdnie_night_info night_info = {
	.max_w = 21,
	.max_h = 102
};

static struct mdnie_color_lens_info color_lens_info = {
	.max_color = 12,
	.max_level = 9,
	.max_w = 21
};

static inline int color_offset_f1(int x, int y)
{
	return ((y << 10) - (((x << 10) * 39) / 38) - (95 << 10)) >> 10;
}
static inline int color_offset_f2(int x, int y)
{
	return ((y << 10) - (((x << 10) * 36) / 35) - (56 << 10)) >> 10;
}
static inline int color_offset_f3(int x, int y)
{
	return ((y << 10) + (((x << 10) * 7) / 1) - (24728 << 10)) >> 10;
}
static inline int color_offset_f4(int x, int y)
{
	return ((y << 10) + (((x << 10) * 25) / 7) - (14031 << 10)) >> 10;
}

/* color coordination order is WR, WG, WB */
static unsigned char coordinate_data_1[] = {
	0xff, 0xff, 0xff, /* dummy */
	0xff, 0xfd, 0xfc, /* Tune_1 */
	0xff, 0xfe, 0xff, /* Tune_2 */
	0xfc, 0xfc, 0xff, /* Tune_3 */
	0xff, 0xfe, 0xfd, /* Tune_4 */
	0xff, 0xff, 0xff, /* Tune_5 */
	0xfc, 0xfd, 0xff, /* Tune_6 */
	0xfe, 0xff, 0xfc, /* Tune_7 */
	0xfe, 0xff, 0xfe, /* Tune_8 */
	0xfc, 0xfe, 0xff, /* Tune_9 */
};

static unsigned char coordinate_data_2[] = {
	0xff, 0xff, 0xff, /* dummy */
	0xff, 0xfa, 0xf0, /* Tune_1 */
	0xff, 0xfa, 0xf0, /* Tune_2 */
	0xff, 0xfa, 0xf0, /* Tune_3 */
	0xff, 0xfa, 0xf0, /* Tune_4 */
	0xff, 0xfa, 0xf0, /* Tune_5 */
	0xff, 0xfa, 0xf0, /* Tune_6 */
	0xff, 0xfa, 0xf0, /* Tune_7 */
	0xff, 0xfa, 0xf0, /* Tune_8 */
	0xff, 0xfa, 0xf0, /* Tune_9 */
};

static unsigned char *coordinate_data[MODE_MAX] = {
	coordinate_data_2,
	coordinate_data_2,
	coordinate_data_2,
	coordinate_data_1,
	coordinate_data_1,
	coordinate_data_1,
};

static unsigned char adjust_ldu_data_1[] = {
	0xff, 0xff, 0xff,
	0xfd, 0xfd, 0xff,
	0xfb, 0xfb, 0xff,
	0xf9, 0xf8, 0xff,
	0xf6, 0xf6, 0xff,
	0xf4, 0xf4, 0xff,
};

static unsigned char adjust_ldu_data_2[] = {
	0xff, 0xfc, 0xf6,
	0xfd, 0xfa, 0xf6,
	0xfb, 0xf7, 0xf6,
	0xf9, 0xf5, 0xf6,
	0xf4, 0xf0, 0xf6,
	0xf2, 0xee, 0xf6,
};

static unsigned char *adjust_ldu_data[MODE_MAX] = {
	adjust_ldu_data_2,
	adjust_ldu_data_2,
	adjust_ldu_data_2,
	adjust_ldu_data_1,
	adjust_ldu_data_1,
	adjust_ldu_data_1,
};

static unsigned char night_mode_data_auto[] = {
	0xf4, 0x00, 0x00, 0x0e, 0xf9, 0x03, 0x00, 0x00, 0xec, 0x00, 0xf9, 0xec, 0xff, 0x00, 0xec, 0xff, 0xf9, 0x00, 0xff, 0xf9, 0xec, /* 6500K */
	0xf4, 0x00, 0x00, 0x0e, 0xf5, 0x03, 0x00, 0x00, 0xe6, 0x00, 0xf5, 0xe6, 0xff, 0x00, 0xe6, 0xff, 0xf5, 0x00, 0xff, 0xf5, 0xe6, /* 6300K */
	0xf4, 0x00, 0x00, 0x0e, 0xf2, 0x03, 0x00, 0x00, 0xe0, 0x00, 0xf2, 0xe0, 0xff, 0x00, 0xe0, 0xff, 0xf2, 0x00, 0xff, 0xf2, 0xe0, /* 6100K */
	0xf4, 0x00, 0x00, 0x0e, 0xef, 0x03, 0x00, 0x00, 0xd8, 0x00, 0xef, 0xd8, 0xff, 0x00, 0xd8, 0xff, 0xef, 0x00, 0xff, 0xef, 0xd8, /* 5900K */
	0xf4, 0x00, 0x00, 0x0e, 0xec, 0x03, 0x00, 0x00, 0xd0, 0x00, 0xec, 0xd0, 0xff, 0x00, 0xd0, 0xff, 0xec, 0x00, 0xff, 0xec, 0xd0, /* 5700K */
	0xf4, 0x00, 0x00, 0x0e, 0xe9, 0x03, 0x00, 0x00, 0xc5, 0x00, 0xe9, 0xc5, 0xff, 0x00, 0xc5, 0xff, 0xe9, 0x00, 0xff, 0xe9, 0xc5, /* 5500K */
	0xf4, 0x00, 0x00, 0x0e, 0xdd, 0x03, 0x00, 0x00, 0x9c, 0x00, 0xdd, 0x9c, 0xff, 0x00, 0x9c, 0xff, 0xdd, 0x00, 0xff, 0xdd, 0x9c, /* 4900K */
	0xf4, 0x00, 0x00, 0x0e, 0xcb, 0x03, 0x00, 0x00, 0x7e, 0x00, 0xcb, 0x7e, 0xff, 0x00, 0x7e, 0xff, 0xcb, 0x00, 0xff, 0xcb, 0x7e, /* 4300K */
	0xf4, 0x00, 0x00, 0x0e, 0xba, 0x03, 0x00, 0x00, 0x63, 0x00, 0xba, 0x63, 0xff, 0x00, 0x63, 0xff, 0xba, 0x00, 0xff, 0xba, 0x63, /* 3700K */
	0xf4, 0x00, 0x00, 0x0e, 0xaa, 0x03, 0x00, 0x00, 0x48, 0x00, 0xaa, 0x48, 0xff, 0x00, 0x48, 0xff, 0xaa, 0x00, 0xff, 0xaa, 0x48, /* 3100K */
	0xf4, 0x00, 0x00, 0x0e, 0x81, 0x03, 0x00, 0x00, 0x22, 0x00, 0x81, 0x22, 0xff, 0x00, 0x22, 0xff, 0x81, 0x00, 0xff, 0x81, 0x22, /* 2300K */
	0xf4, 0x00, 0x00, 0x0e, 0xf1, 0x03, 0x00, 0x00, 0xdc, 0x00, 0xf1, 0xdc, 0xff, 0x00, 0xdc, 0xff, 0xf1, 0x00, 0xff, 0xf1, 0xdc,
	0xf4, 0x00, 0x00, 0x0e, 0xf0, 0x03, 0x00, 0x00, 0xda, 0x00, 0xf0, 0xda, 0xff, 0x00, 0xda, 0xff, 0xf0, 0x00, 0xff, 0xf0, 0xda,
	0xf4, 0x00, 0x00, 0x0e, 0xf0, 0x03, 0x00, 0x00, 0xd7, 0x00, 0xf0, 0xd7, 0xff, 0x00, 0xd7, 0xff, 0xf0, 0x00, 0xff, 0xf0, 0xd7,
	0xf4, 0x00, 0x00, 0x0e, 0xef, 0x03, 0x00, 0x00, 0xd5, 0x00, 0xef, 0xd5, 0xff, 0x00, 0xd5, 0xff, 0xef, 0x00, 0xff, 0xef, 0xd5,
	0xf4, 0x00, 0x00, 0x0e, 0xee, 0x03, 0x00, 0x00, 0xd3, 0x00, 0xee, 0xd3, 0xff, 0x00, 0xd3, 0xff, 0xee, 0x00, 0xff, 0xee, 0xd3,
	0xf4, 0x00, 0x00, 0x0e, 0xed, 0x03, 0x00, 0x00, 0xd1, 0x00, 0xed, 0xd1, 0xff, 0x00, 0xd1, 0xff, 0xed, 0x00, 0xff, 0xed, 0xd1,
	0xf4, 0x00, 0x00, 0x0e, 0xed, 0x03, 0x00, 0x00, 0xce, 0x00, 0xed, 0xce, 0xff, 0x00, 0xce, 0xff, 0xed, 0x00, 0xff, 0xed, 0xce,
	0xf4, 0x00, 0x00, 0x0e, 0xec, 0x03, 0x00, 0x00, 0xcc, 0x00, 0xec, 0xcc, 0xff, 0x00, 0xcc, 0xff, 0xec, 0x00, 0xff, 0xec, 0xcc,
	0xf4, 0x00, 0x00, 0x0e, 0xeb, 0x03, 0x00, 0x00, 0xc9, 0x00, 0xeb, 0xc9, 0xff, 0x00, 0xc9, 0xff, 0xeb, 0x00, 0xff, 0xeb, 0xc9,
	0xf4, 0x00, 0x00, 0x0e, 0xea, 0x03, 0x00, 0x00, 0xc6, 0x00, 0xea, 0xc6, 0xff, 0x00, 0xc6, 0xff, 0xea, 0x00, 0xff, 0xea, 0xc6,
	0xf4, 0x00, 0x00, 0x0e, 0xe9, 0x03, 0x00, 0x00, 0xc3, 0x00, 0xe9, 0xc3, 0xff, 0x00, 0xc3, 0xff, 0xe9, 0x00, 0xff, 0xe9, 0xc3,
	0xf4, 0x00, 0x00, 0x0e, 0xe9, 0x03, 0x00, 0x00, 0xbf, 0x00, 0xe9, 0xbf, 0xff, 0x00, 0xbf, 0xff, 0xe9, 0x00, 0xff, 0xe9, 0xbf,
	0xf4, 0x00, 0x00, 0x0e, 0xe8, 0x03, 0x00, 0x00, 0xbc, 0x00, 0xe8, 0xbc, 0xff, 0x00, 0xbc, 0xff, 0xe8, 0x00, 0xff, 0xe8, 0xbc,
	0xf4, 0x00, 0x00, 0x0e, 0xe7, 0x03, 0x00, 0x00, 0xb9, 0x00, 0xe7, 0xb9, 0xff, 0x00, 0xb9, 0xff, 0xe7, 0x00, 0xff, 0xe7, 0xb9,
	0xf4, 0x00, 0x00, 0x0e, 0xe6, 0x03, 0x00, 0x00, 0xb6, 0x00, 0xe6, 0xb6, 0xff, 0x00, 0xb6, 0xff, 0xe6, 0x00, 0xff, 0xe6, 0xb6,
	0xf4, 0x00, 0x00, 0x0e, 0xe5, 0x03, 0x00, 0x00, 0xb2, 0x00, 0xe5, 0xb2, 0xff, 0x00, 0xb2, 0xff, 0xe5, 0x00, 0xff, 0xe5, 0xb2,
	0xf4, 0x00, 0x00, 0x0e, 0xe3, 0x03, 0x00, 0x00, 0xad, 0x00, 0xe3, 0xad, 0xff, 0x00, 0xad, 0xff, 0xe3, 0x00, 0xff, 0xe3, 0xad,
	0xf4, 0x00, 0x00, 0x0e, 0xe2, 0x03, 0x00, 0x00, 0xa9, 0x00, 0xe2, 0xa9, 0xff, 0x00, 0xa9, 0xff, 0xe2, 0x00, 0xff, 0xe2, 0xa9,
	0xf4, 0x00, 0x00, 0x0e, 0xe0, 0x03, 0x00, 0x00, 0xa5, 0x00, 0xe0, 0xa5, 0xff, 0x00, 0xa5, 0xff, 0xe0, 0x00, 0xff, 0xe0, 0xa5,
	0xf4, 0x00, 0x00, 0x0e, 0xdf, 0x03, 0x00, 0x00, 0xa1, 0x00, 0xdf, 0xa1, 0xff, 0x00, 0xa1, 0xff, 0xdf, 0x00, 0xff, 0xdf, 0xa1,
	0xf4, 0x00, 0x00, 0x0e, 0xdd, 0x03, 0x00, 0x00, 0x9c, 0x00, 0xdd, 0x9c, 0xff, 0x00, 0x9c, 0xff, 0xdd, 0x00, 0xff, 0xdd, 0x9c,
	0xf4, 0x00, 0x00, 0x0e, 0xdc, 0x03, 0x00, 0x00, 0x98, 0x00, 0xdc, 0x98, 0xff, 0x00, 0x98, 0xff, 0xdc, 0x00, 0xff, 0xdc, 0x98,
	0xf4, 0x00, 0x00, 0x0e, 0xda, 0x03, 0x00, 0x00, 0x95, 0x00, 0xda, 0x95, 0xff, 0x00, 0x95, 0xff, 0xda, 0x00, 0xff, 0xda, 0x95,
	0xf4, 0x00, 0x00, 0x0e, 0xd9, 0x03, 0x00, 0x00, 0x92, 0x00, 0xd9, 0x92, 0xff, 0x00, 0x92, 0xff, 0xd9, 0x00, 0xff, 0xd9, 0x92,
	0xf4, 0x00, 0x00, 0x0e, 0xd7, 0x03, 0x00, 0x00, 0x8f, 0x00, 0xd7, 0x8f, 0xff, 0x00, 0x8f, 0xff, 0xd7, 0x00, 0xff, 0xd7, 0x8f,
	0xf4, 0x00, 0x00, 0x0e, 0xd6, 0x03, 0x00, 0x00, 0x8d, 0x00, 0xd6, 0x8d, 0xff, 0x00, 0x8d, 0xff, 0xd6, 0x00, 0xff, 0xd6, 0x8d,
	0xf4, 0x00, 0x00, 0x0e, 0xd4, 0x03, 0x00, 0x00, 0x8a, 0x00, 0xd4, 0x8a, 0xff, 0x00, 0x8a, 0xff, 0xd4, 0x00, 0xff, 0xd4, 0x8a,
	0xf4, 0x00, 0x00, 0x0e, 0xd3, 0x03, 0x00, 0x00, 0x87, 0x00, 0xd3, 0x87, 0xff, 0x00, 0x87, 0xff, 0xd3, 0x00, 0xff, 0xd3, 0x87,
	0xf4, 0x00, 0x00, 0x0e, 0xd1, 0x03, 0x00, 0x00, 0x84, 0x00, 0xd1, 0x84, 0xff, 0x00, 0x84, 0xff, 0xd1, 0x00, 0xff, 0xd1, 0x84,
	0xf4, 0x00, 0x00, 0x0e, 0xcf, 0x03, 0x00, 0x00, 0x81, 0x00, 0xcf, 0x81, 0xff, 0x00, 0x81, 0xff, 0xcf, 0x00, 0xff, 0xcf, 0x81,
	0xf4, 0x00, 0x00, 0x0e, 0xce, 0x03, 0x00, 0x00, 0x7f, 0x00, 0xce, 0x7f, 0xff, 0x00, 0x7f, 0xff, 0xce, 0x00, 0xff, 0xce, 0x7f,
	0xf4, 0x00, 0x00, 0x0e, 0xcc, 0x03, 0x00, 0x00, 0x7c, 0x00, 0xcc, 0x7c, 0xff, 0x00, 0x7c, 0xff, 0xcc, 0x00, 0xff, 0xcc, 0x7c,
	0xf4, 0x00, 0x00, 0x0e, 0xca, 0x03, 0x00, 0x00, 0x79, 0x00, 0xca, 0x79, 0xff, 0x00, 0x79, 0xff, 0xca, 0x00, 0xff, 0xca, 0x79,
	0xf4, 0x00, 0x00, 0x0e, 0xc8, 0x03, 0x00, 0x00, 0x76, 0x00, 0xc8, 0x76, 0xff, 0x00, 0x76, 0xff, 0xc8, 0x00, 0xff, 0xc8, 0x76,
	0xf4, 0x00, 0x00, 0x0e, 0xc7, 0x03, 0x00, 0x00, 0x74, 0x00, 0xc7, 0x74, 0xff, 0x00, 0x74, 0xff, 0xc7, 0x00, 0xff, 0xc7, 0x74,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71, /* 37 step */
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
	0xf4, 0x00, 0x00, 0x0e, 0xc5, 0x03, 0x00, 0x00, 0x71, 0x00, 0xc5, 0x71, 0xff, 0x00, 0x71, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x71,
};

static unsigned char night_mode_data_natural[] = {
	0xbb, 0x08, 0x04, 0x3a, 0xe0, 0x12, 0x0b, 0x01, 0xb7, 0x3c, 0xe7, 0xcd, 0xcb, 0x08, 0xc4, 0xf3, 0xe8, 0x13, 0xff, 0xf8, 0xe9, /* 6500K */
	0xbb, 0x08, 0x04, 0x3a, 0xdd, 0x11, 0x0b, 0x01, 0xb0, 0x3c, 0xe3, 0xc5, 0xcb, 0x08, 0xbc, 0xf3, 0xe4, 0x12, 0xff, 0xf4, 0xe0, /* 6300K */
	0xbb, 0x08, 0x04, 0x3a, 0xd9, 0x10, 0x0b, 0x01, 0xa9, 0x3c, 0xe0, 0xbd, 0xcb, 0x08, 0xb5, 0xf3, 0xe0, 0x11, 0xff, 0xf0, 0xd7, /* 6100K */
	0xbb, 0x08, 0x04, 0x3a, 0xd6, 0x10, 0x0b, 0x01, 0xa2, 0x3c, 0xdd, 0xb5, 0xcb, 0x08, 0xad, 0xf3, 0xde, 0x10, 0xff, 0xed, 0xce, /* 5900K */
	0xbb, 0x08, 0x03, 0x3a, 0xd3, 0x0f, 0x0b, 0x01, 0x9b, 0x3c, 0xd9, 0xad, 0xcb, 0x08, 0xa6, 0xf3, 0xda, 0x10, 0xff, 0xe9, 0xc5, /* 5700K */
	0xbb, 0x08, 0x03, 0x3a, 0xcf, 0x0e, 0x0b, 0x01, 0x93, 0x3c, 0xd5, 0xa5, 0xcb, 0x08, 0x9d, 0xf3, 0xd6, 0x0f, 0xff, 0xe5, 0xbb, /* 5500K */
	0xbb, 0x07, 0x03, 0x3a, 0xc4, 0x0c, 0x0b, 0x01, 0x7c, 0x3c, 0xca, 0x8b, 0xcb, 0x07, 0x85, 0xf3, 0xcb, 0x0d, 0xff, 0xd9, 0x9e, /* 4900K */
	0xbb, 0x07, 0x02, 0x3a, 0xb6, 0x09, 0x0b, 0x01, 0x63, 0x3c, 0xbb, 0x6f, 0xcb, 0x07, 0x6a, 0xf3, 0xbc, 0x0a, 0xff, 0xc9, 0x7e, /* 4300K */
	0xbb, 0x06, 0x01, 0x3a, 0xa5, 0x07, 0x0b, 0x01, 0x49, 0x3c, 0xaa, 0x52, 0xcb, 0x06, 0x4e, 0xf3, 0xab, 0x07, 0xff, 0xb7, 0x5d, /* 3700K */
	0xbb, 0x05, 0x01, 0x3a, 0x90, 0x04, 0x0b, 0x01, 0x30, 0x3c, 0x94, 0x35, 0xcb, 0x05, 0x33, 0xf3, 0x95, 0x05, 0xff, 0x9f, 0x3d, /* 3100K */
	0xbb, 0x04, 0x00, 0x3a, 0x69, 0x02, 0x0b, 0x00, 0x15, 0x3c, 0x6c, 0x17, 0xcb, 0x04, 0x16, 0xf3, 0x6c, 0x02, 0xff, 0x74, 0x1b, /* 2300K */
	0xbb, 0x08, 0x04, 0x3a, 0xd7, 0x10, 0x0b, 0x01, 0xa5, 0x3c, 0xde, 0xb9, 0xcb, 0x08, 0xb1, 0xf3, 0xdf, 0x11, 0xff, 0xee, 0xd2,
	0xbb, 0x08, 0x04, 0x3a, 0xd6, 0x10, 0x0b, 0x01, 0xa3, 0x3c, 0xdd, 0xb6, 0xcb, 0x08, 0xae, 0xf3, 0xde, 0x11, 0xff, 0xed, 0xcf,
	0xbb, 0x08, 0x04, 0x3a, 0xd5, 0x10, 0x0b, 0x01, 0xa1, 0x3c, 0xdc, 0xb4, 0xcb, 0x08, 0xac, 0xf3, 0xdd, 0x10, 0xff, 0xec, 0xcd,
	0xbb, 0x08, 0x03, 0x3a, 0xd4, 0x0f, 0x0b, 0x01, 0x9f, 0x3c, 0xdb, 0xb2, 0xcb, 0x08, 0xaa, 0xf3, 0xdc, 0x10, 0xff, 0xeb, 0xca,
	0xbb, 0x08, 0x03, 0x3a, 0xd3, 0x0f, 0x0b, 0x01, 0x9d, 0x3c, 0xda, 0xb0, 0xcb, 0x08, 0xa8, 0xf3, 0xdb, 0x10, 0xff, 0xea, 0xc8,
	0xbb, 0x08, 0x03, 0x3a, 0xd3, 0x0f, 0x0b, 0x01, 0x9b, 0x3c, 0xd9, 0xad, 0xcb, 0x08, 0xa6, 0xf3, 0xda, 0x10, 0xff, 0xe9, 0xc5,
	0xbb, 0x08, 0x03, 0x3a, 0xd2, 0x0f, 0x0b, 0x01, 0x99, 0x3c, 0xd8, 0xac, 0xcb, 0x08, 0xa4, 0xf3, 0xd9, 0x10, 0xff, 0xe8, 0xc3,
	0xbb, 0x08, 0x03, 0x3a, 0xd1, 0x0f, 0x0b, 0x01, 0x97, 0x3c, 0xd7, 0xa9, 0xcb, 0x08, 0xa1, 0xf3, 0xd8, 0x0f, 0xff, 0xe7, 0xc0,
	0xbb, 0x08, 0x03, 0x3a, 0xd0, 0x0e, 0x0b, 0x01, 0x94, 0x3c, 0xd6, 0xa6, 0xcb, 0x08, 0x9f, 0xf3, 0xd7, 0x0f, 0xff, 0xe6, 0xbd,
	0xbb, 0x08, 0x03, 0x3a, 0xcf, 0x0e, 0x0b, 0x01, 0x93, 0x3c, 0xd5, 0xa5, 0xcb, 0x08, 0x9d, 0xf3, 0xd6, 0x0f, 0xff, 0xe5, 0xbb,
	0xbb, 0x08, 0x03, 0x3a, 0xce, 0x0e, 0x0b, 0x01, 0x91, 0x3c, 0xd4, 0xa2, 0xcb, 0x08, 0x9b, 0xf3, 0xd5, 0x0f, 0xff, 0xe4, 0xb8,
	0xbb, 0x07, 0x03, 0x3a, 0xcc, 0x0e, 0x0b, 0x01, 0x8e, 0x3c, 0xd2, 0x9f, 0xcb, 0x07, 0x98, 0xf3, 0xd3, 0x0e, 0xff, 0xe2, 0xb5,
	0xbb, 0x07, 0x03, 0x3a, 0xcb, 0x0d, 0x0b, 0x01, 0x8c, 0x3c, 0xd2, 0x9d, 0xcb, 0x07, 0x96, 0xf3, 0xd2, 0x0e, 0xff, 0xe1, 0xb2,
	0xbb, 0x07, 0x03, 0x3a, 0xca, 0x0d, 0x0b, 0x01, 0x8a, 0x3c, 0xd1, 0x9b, 0xcb, 0x07, 0x94, 0xf3, 0xd1, 0x0e, 0xff, 0xe0, 0xb0,
	0xbb, 0x07, 0x03, 0x3a, 0xca, 0x0d, 0x0b, 0x01, 0x88, 0x3c, 0xd0, 0x98, 0xcb, 0x07, 0x91, 0xf3, 0xd1, 0x0e, 0xff, 0xdf, 0xad,
	0xbb, 0x07, 0x03, 0x3a, 0xc9, 0x0d, 0x0b, 0x01, 0x86, 0x3c, 0xcf, 0x96, 0xcb, 0x07, 0x8f, 0xf3, 0xd0, 0x0e, 0xff, 0xde, 0xaa,
	0xbb, 0x07, 0x03, 0x3a, 0xc7, 0x0d, 0x0b, 0x01, 0x83, 0x3c, 0xcd, 0x93, 0xcb, 0x07, 0x8c, 0xf3, 0xce, 0x0d, 0xff, 0xdc, 0xa7,
	0xbb, 0x07, 0x03, 0x3a, 0xc6, 0x0c, 0x0b, 0x01, 0x81, 0x3c, 0xcc, 0x90, 0xcb, 0x07, 0x8a, 0xf3, 0xcd, 0x0d, 0xff, 0xdb, 0xa4,
	0xbb, 0x07, 0x03, 0x3a, 0xc4, 0x0c, 0x0b, 0x01, 0x7f, 0x3c, 0xca, 0x8e, 0xcb, 0x07, 0x88, 0xf3, 0xcb, 0x0d, 0xff, 0xd9, 0xa2,
	0xbb, 0x07, 0x03, 0x3a, 0xc3, 0x0c, 0x0b, 0x01, 0x7d, 0x3c, 0xc9, 0x8c, 0xcb, 0x07, 0x86, 0xf3, 0xca, 0x0d, 0xff, 0xd8, 0x9f,
	0xbb, 0x07, 0x03, 0x3a, 0xc1, 0x0c, 0x0b, 0x01, 0x7a, 0x3c, 0xc7, 0x89, 0xcb, 0x07, 0x83, 0xf3, 0xc8, 0x0c, 0xff, 0xd6, 0x9c,
	0xbb, 0x07, 0x03, 0x3a, 0xc0, 0x0c, 0x0b, 0x01, 0x78, 0x3c, 0xc6, 0x87, 0xcb, 0x07, 0x81, 0xf3, 0xc7, 0x0c, 0xff, 0xd5, 0x99,
	0xbb, 0x07, 0x02, 0x3a, 0xc0, 0x0b, 0x0b, 0x01, 0x76, 0x3c, 0xc5, 0x84, 0xcb, 0x07, 0x7e, 0xf3, 0xc6, 0x0c, 0xff, 0xd4, 0x96,
	0xbb, 0x07, 0x02, 0x3a, 0xbe, 0x0b, 0x0b, 0x01, 0x73, 0x3c, 0xc4, 0x81, 0xcb, 0x07, 0x7b, 0xf3, 0xc4, 0x0c, 0xff, 0xd2, 0x93,
	0xbb, 0x07, 0x02, 0x3a, 0xbd, 0x0b, 0x0b, 0x01, 0x71, 0x3c, 0xc3, 0x7f, 0xcb, 0x07, 0x79, 0xf3, 0xc3, 0x0b, 0xff, 0xd1, 0x90,
	0xbb, 0x07, 0x02, 0x3a, 0xbb, 0x0b, 0x0b, 0x01, 0x6f, 0x3c, 0xc1, 0x7c, 0xcb, 0x07, 0x76, 0xf3, 0xc2, 0x0b, 0xff, 0xcf, 0x8d,
	0xbb, 0x07, 0x02, 0x3a, 0xba, 0x0a, 0x0b, 0x01, 0x6c, 0x3c, 0xc0, 0x79, 0xcb, 0x07, 0x74, 0xf3, 0xc1, 0x0b, 0xff, 0xce, 0x8a,
	0xbb, 0x07, 0x02, 0x3a, 0xb8, 0x0a, 0x0b, 0x01, 0x6a, 0x3c, 0xbe, 0x77, 0xcb, 0x07, 0x71, 0xf3, 0xbf, 0x0b, 0xff, 0xcc, 0x87,
	0xbb, 0x07, 0x02, 0x3a, 0xb7, 0x0a, 0x0b, 0x01, 0x68, 0x3c, 0xbd, 0x74, 0xcb, 0x07, 0x6f, 0xf3, 0xbe, 0x0a, 0xff, 0xcb, 0x84,
	0xbb, 0x07, 0x02, 0x3a, 0xb6, 0x0a, 0x0b, 0x01, 0x65, 0x3c, 0xbb, 0x71, 0xcb, 0x07, 0x6c, 0xf3, 0xbc, 0x0a, 0xff, 0xc9, 0x81,
	0xbb, 0x07, 0x02, 0x3a, 0xb5, 0x09, 0x0b, 0x01, 0x62, 0x3c, 0xba, 0x6e, 0xcb, 0x07, 0x69, 0xf3, 0xbb, 0x0a, 0xff, 0xc8, 0x7d,
	0xbb, 0x06, 0x02, 0x3a, 0xb3, 0x09, 0x0b, 0x01, 0x60, 0x3c, 0xb8, 0x6b, 0xcb, 0x06, 0x66, 0xf3, 0xb9, 0x0a, 0xff, 0xc6, 0x7a,
	0xbb, 0x06, 0x02, 0x3a, 0xb2, 0x09, 0x0b, 0x01, 0x5d, 0x3c, 0xb7, 0x69, 0xcb, 0x06, 0x64, 0xf3, 0xb8, 0x09, 0xff, 0xc5, 0x77,
	0xbb, 0x06, 0x02, 0x3a, 0xb0, 0x09, 0x0b, 0x01, 0x5b, 0x3c, 0xb6, 0x66, 0xcb, 0x06, 0x61, 0xf3, 0xb6, 0x09, 0xff, 0xc3, 0x74,
	0xbb, 0x06, 0x02, 0x3a, 0xaf, 0x08, 0x0b, 0x01, 0x58, 0x3c, 0xb5, 0x62, 0xcb, 0x06, 0x5e, 0xf3, 0xb5, 0x09, 0xff, 0xc2, 0x70,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d, /* 37 step */
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
	0xbb, 0x06, 0x02, 0x3a, 0xad, 0x08, 0x0b, 0x01, 0x55, 0x3c, 0xb3, 0x60, 0xcb, 0x06, 0x5b, 0xf3, 0xb3, 0x08, 0xff, 0xc0, 0x6d,
};

static unsigned char *night_mode_data[MODE_MAX] = {
	night_mode_data_natural,
	night_mode_data_natural,
	night_mode_data_natural,
	night_mode_data_natural,
	night_mode_data_auto,
	night_mode_data_natural,
};

static unsigned char color_lens_data[] = {
	//Blue
	0xcc, 0x00, 0x33, 0x00, 0xcc, 0x33, 0x00, 0x00, 0xff, 0x00, 0xcc, 0xff, 0xcc, 0x00, 0xff, 0xcc, 0xcc, 0x33, 0xcc, 0xcc, 0xff, /* 20% */
	0xbf, 0x00, 0x40, 0x00, 0xbf, 0x40, 0x00, 0x00, 0xff, 0x00, 0xbf, 0xff, 0xbf, 0x00, 0xff, 0xbf, 0xbf, 0x40, 0xbf, 0xbf, 0xff, /* 25% */
	0xb2, 0x00, 0x4d, 0x00, 0xb2, 0x4d, 0x00, 0x00, 0xff, 0x00, 0xb2, 0xff, 0xb2, 0x00, 0xff, 0xb2, 0xb2, 0x4d, 0xb2, 0xb2, 0xff, /* 30% */
	0xa6, 0x00, 0x59, 0x00, 0xa6, 0x59, 0x00, 0x00, 0xff, 0x00, 0xa6, 0xff, 0xa6, 0x00, 0xff, 0xa6, 0xa6, 0x59, 0xa6, 0xa6, 0xff, /* 35% */
	0x99, 0x00, 0x66, 0x00, 0x99, 0x66, 0x00, 0x00, 0xff, 0x00, 0x99, 0xff, 0x99, 0x00, 0xff, 0x99, 0x99, 0x66, 0x99, 0x99, 0xff, /* 40% */
	0x8c, 0x00, 0x73, 0x00, 0x8c, 0x73, 0x00, 0x00, 0xff, 0x00, 0x8c, 0xff, 0x8c, 0x00, 0xff, 0x8c, 0x8c, 0x73, 0x8c, 0x8c, 0xff, /* 45% */
	0x7f, 0x00, 0x80, 0x00, 0x7f, 0x80, 0x00, 0x00, 0xff, 0x00, 0x7f, 0xff, 0x7f, 0x00, 0xff, 0x7f, 0x7f, 0x80, 0x7f, 0x7f, 0xff, /* 50% */
	0x73, 0x00, 0x8c, 0x00, 0x73, 0x8c, 0x00, 0x00, 0xff, 0x00, 0x73, 0xff, 0x73, 0x00, 0xff, 0x73, 0x73, 0x8c, 0x73, 0x73, 0xff, /* 55% */
	0x66, 0x00, 0x99, 0x00, 0x66, 0x99, 0x00, 0x00, 0xff, 0x00, 0x66, 0xff, 0x66, 0x00, 0xff, 0x66, 0x66, 0x99, 0x66, 0x66, 0xff, /* 60% */

	//Azure
	0xcc, 0x19, 0x33, 0x00, 0xe5, 0x33, 0x00, 0x19, 0xff, 0x00, 0xe5, 0xff, 0xcc, 0x19, 0xff, 0xcc, 0xe5, 0x33, 0xcc, 0xe5, 0xff, /* 20% */
	0xbf, 0x20, 0x40, 0x00, 0xdf, 0x40, 0x00, 0x20, 0xff, 0x00, 0xdf, 0xff, 0xbf, 0x20, 0xff, 0xbf, 0xdf, 0x40, 0xbf, 0xdf, 0xff, /* 25% */
	0xb2, 0x26, 0x4d, 0x00, 0xd8, 0x4d, 0x00, 0x26, 0xff, 0x00, 0xd8, 0xff, 0xb2, 0x26, 0xff, 0xb2, 0xd8, 0x4d, 0xb2, 0xd8, 0xff, /* 30% */
	0xa6, 0x2c, 0x59, 0x00, 0xd2, 0x59, 0x00, 0x2c, 0xff, 0x00, 0xd2, 0xff, 0xa6, 0x2c, 0xff, 0xa6, 0xd2, 0x59, 0xa6, 0xd2, 0xff, /* 35% */
	0x99, 0x33, 0x66, 0x00, 0xcc, 0x66, 0x00, 0x33, 0xff, 0x00, 0xcc, 0xff, 0x99, 0x33, 0xff, 0x99, 0xcc, 0x66, 0x99, 0xcc, 0xff, /* 40% */
	0x8c, 0x39, 0x73, 0x00, 0xc5, 0x73, 0x00, 0x39, 0xff, 0x00, 0xc5, 0xff, 0x8c, 0x39, 0xff, 0x8c, 0xc5, 0x73, 0x8c, 0xc5, 0xff, /* 45% */
	0x7f, 0x40, 0x80, 0x00, 0xbf, 0x80, 0x00, 0x40, 0xff, 0x00, 0xbf, 0xff, 0x7f, 0x40, 0xff, 0x7f, 0xbf, 0x80, 0x7f, 0xbf, 0xff, /* 50% */
	0x73, 0x46, 0x8c, 0x00, 0xb9, 0x8c, 0x00, 0x46, 0xff, 0x00, 0xb9, 0xff, 0x73, 0x46, 0xff, 0x73, 0xb9, 0x8c, 0x73, 0xb9, 0xff, /* 55% */
	0x66, 0x4c, 0x99, 0x00, 0xb2, 0x99, 0x00, 0x4c, 0xff, 0x00, 0xb2, 0xff, 0x66, 0x4c, 0xff, 0x66, 0xb2, 0x99, 0x66, 0xb2, 0xff, /* 60% */

	//Cyan
	0xcc, 0x33, 0x33, 0x00, 0xff, 0x33, 0x00, 0x33, 0xff, 0x00, 0xff, 0xff, 0xcc, 0x33, 0xff, 0xcc, 0xff, 0x33, 0xcc, 0xff, 0xff, /* 20% */
	0xbf, 0x40, 0x40, 0x00, 0xff, 0x40, 0x00, 0x40, 0xff, 0x00, 0xff, 0xff, 0xbf, 0x40, 0xff, 0xbf, 0xff, 0x40, 0xbf, 0xff, 0xff, /* 25% */
	0xb2, 0x4d, 0x4d, 0x00, 0xff, 0x4d, 0x00, 0x4d, 0xff, 0x00, 0xff, 0xff, 0xb2, 0x4d, 0xff, 0xb2, 0xff, 0x4d, 0xb2, 0xff, 0xff, /* 30% */
	0xa6, 0x59, 0x59, 0x00, 0xff, 0x59, 0x00, 0x59, 0xff, 0x00, 0xff, 0xff, 0xa6, 0x59, 0xff, 0xa6, 0xff, 0x59, 0xa6, 0xff, 0xff, /* 35% */
	0x99, 0x66, 0x66, 0x00, 0xff, 0x66, 0x00, 0x66, 0xff, 0x00, 0xff, 0xff, 0x99, 0x66, 0xff, 0x99, 0xff, 0x66, 0x99, 0xff, 0xff, /* 40% */
	0x8c, 0x73, 0x73, 0x00, 0xff, 0x73, 0x00, 0x73, 0xff, 0x00, 0xff, 0xff, 0x8c, 0x73, 0xff, 0x8c, 0xff, 0x73, 0x8c, 0xff, 0xff, /* 45% */
	0x7f, 0x80, 0x80, 0x00, 0xff, 0x80, 0x00, 0x80, 0xff, 0x00, 0xff, 0xff, 0x7f, 0x80, 0xff, 0x7f, 0xff, 0x80, 0x7f, 0xff, 0xff, /* 50% */
	0x73, 0x8c, 0x8c, 0x00, 0xff, 0x8c, 0x00, 0x8c, 0xff, 0x00, 0xff, 0xff, 0x73, 0x8c, 0xff, 0x73, 0xff, 0x8c, 0x73, 0xff, 0xff, /* 55% */
	0x66, 0x99, 0x99, 0x00, 0xff, 0x99, 0x00, 0x99, 0xff, 0x00, 0xff, 0xff, 0x66, 0x99, 0xff, 0x66, 0xff, 0x99, 0x66, 0xff, 0xff, /* 60% */

	//Spring green
	0xcc, 0x33, 0x19, 0x00, 0xff, 0x19, 0x00, 0x33, 0xe5, 0x00, 0xff, 0xe5, 0xcc, 0x33, 0xe5, 0xcc, 0xff, 0x19, 0xcc, 0xff, 0xe5, /* 20% */
	0xbf, 0x40, 0x20, 0x00, 0xff, 0x20, 0x00, 0x40, 0xdf, 0x00, 0xff, 0xdf, 0xbf, 0x40, 0xdf, 0xbf, 0xff, 0x20, 0xbf, 0xff, 0xdf, /* 25% */
	0xb2, 0x4d, 0x26, 0x00, 0xff, 0x26, 0x00, 0x4d, 0xd8, 0x00, 0xff, 0xd8, 0xb2, 0x4d, 0xd8, 0xb2, 0xff, 0x26, 0xb2, 0xff, 0xd8, /* 30% */
	0xa6, 0x59, 0x2c, 0x00, 0xff, 0x2c, 0x00, 0x59, 0xd2, 0x00, 0xff, 0xd2, 0xa6, 0x59, 0xd2, 0xa6, 0xff, 0x2c, 0xa6, 0xff, 0xd2, /* 35% */
	0x99, 0x66, 0x33, 0x00, 0xff, 0x33, 0x00, 0x66, 0xcc, 0x00, 0xff, 0xcc, 0x99, 0x66, 0xcc, 0x99, 0xff, 0x33, 0x99, 0xff, 0xcc, /* 40% */
	0x8c, 0x73, 0x39, 0x00, 0xff, 0x39, 0x00, 0x73, 0xc5, 0x00, 0xff, 0xc5, 0x8c, 0x73, 0xc5, 0x8c, 0xff, 0x39, 0x8c, 0xff, 0xc5, /* 45% */
	0x7f, 0x80, 0x40, 0x00, 0xff, 0x40, 0x00, 0x80, 0xbf, 0x00, 0xff, 0xbf, 0x7f, 0x80, 0xbf, 0x7f, 0xff, 0x40, 0x7f, 0xff, 0xbf, /* 50% */
	0x73, 0x8c, 0x46, 0x00, 0xff, 0x46, 0x00, 0x8c, 0xb9, 0x00, 0xff, 0xb9, 0x73, 0x8c, 0xb9, 0x73, 0xff, 0x46, 0x73, 0xff, 0xb9, /* 55% */
	0x66, 0x99, 0x4c, 0x00, 0xff, 0x4c, 0x00, 0x99, 0xb2, 0x00, 0xff, 0xb2, 0x66, 0x99, 0xb2, 0x66, 0xff, 0x4c, 0x66, 0xff, 0xb2, /* 60% */

	//Green
	0xcc, 0x33, 0x00, 0x00, 0xff, 0x00, 0x00, 0x33, 0xcc, 0x00, 0xff, 0xcc, 0xcc, 0x33, 0xcc, 0xcc, 0xff, 0x00, 0xcc, 0xff, 0xcc, /* 20% */
	0xbf, 0x40, 0x00, 0x00, 0xff, 0x00, 0x00, 0x40, 0xbf, 0x00, 0xff, 0xbf, 0xbf, 0x40, 0xbf, 0xbf, 0xff, 0x00, 0xbf, 0xff, 0xbf, /* 25% */
	0xb2, 0x4d, 0x00, 0x00, 0xff, 0x00, 0x00, 0x4d, 0xb2, 0x00, 0xff, 0xb2, 0xb2, 0x4d, 0xb2, 0xb2, 0xff, 0x00, 0xb2, 0xff, 0xb2, /* 30% */
	0xa6, 0x59, 0x00, 0x00, 0xff, 0x00, 0x00, 0x59, 0xa6, 0x00, 0xff, 0xa6, 0xa6, 0x59, 0xa6, 0xa6, 0xff, 0x00, 0xa6, 0xff, 0xa6, /* 35% */
	0x99, 0x66, 0x00, 0x00, 0xff, 0x00, 0x00, 0x66, 0x99, 0x00, 0xff, 0x99, 0x99, 0x66, 0x99, 0x99, 0xff, 0x00, 0x99, 0xff, 0x99, /* 40% */
	0x8c, 0x73, 0x00, 0x00, 0xff, 0x00, 0x00, 0x73, 0x8c, 0x00, 0xff, 0x8c, 0x8c, 0x73, 0x8c, 0x8c, 0xff, 0x00, 0x8c, 0xff, 0x8c, /* 45% */
	0x7f, 0x80, 0x00, 0x00, 0xff, 0x00, 0x00, 0x80, 0x7f, 0x00, 0xff, 0x7f, 0x7f, 0x80, 0x7f, 0x7f, 0xff, 0x00, 0x7f, 0xff, 0x7f, /* 50% */
	0x73, 0x8c, 0x00, 0x00, 0xff, 0x00, 0x00, 0x8c, 0x73, 0x00, 0xff, 0x73, 0x73, 0x8c, 0x73, 0x73, 0xff, 0x00, 0x73, 0xff, 0x73, /* 55% */
	0x66, 0x99, 0x00, 0x00, 0xff, 0x00, 0x00, 0x99, 0x66, 0x00, 0xff, 0x66, 0x66, 0x99, 0x66, 0x66, 0xff, 0x00, 0x66, 0xff, 0x66, /* 60% */

	//Chartreuse Gre
	0xe5, 0x33, 0x00, 0x19, 0xff, 0x00, 0x19, 0x33, 0xcc, 0x19, 0xff, 0xcc, 0xe5, 0x33, 0xcc, 0xe5, 0xff, 0x00, 0xe5, 0xff, 0xcc, /* 20% */
	0xdf, 0x40, 0x00, 0x20, 0xff, 0x00, 0x20, 0x40, 0xbf, 0x20, 0xff, 0xbf, 0xdf, 0x40, 0xbf, 0xdf, 0xff, 0x00, 0xdf, 0xff, 0xbf, /* 25% */
	0xd8, 0x4d, 0x00, 0x26, 0xff, 0x00, 0x26, 0x4d, 0xb2, 0x26, 0xff, 0xb2, 0xd8, 0x4d, 0xb2, 0xd8, 0xff, 0x00, 0xd8, 0xff, 0xb2, /* 30% */
	0xd2, 0x59, 0x00, 0x2c, 0xff, 0x00, 0x2c, 0x59, 0xa6, 0x2c, 0xff, 0xa6, 0xd2, 0x59, 0xa6, 0xd2, 0xff, 0x00, 0xd2, 0xff, 0xa6, /* 35% */
	0xcc, 0x66, 0x00, 0x33, 0xff, 0x00, 0x33, 0x66, 0x99, 0x33, 0xff, 0x99, 0xcc, 0x66, 0x99, 0xcc, 0xff, 0x00, 0xcc, 0xff, 0x99, /* 40% */
	0xc5, 0x73, 0x00, 0x39, 0xff, 0x00, 0x39, 0x73, 0x8c, 0x39, 0xff, 0x8c, 0xc5, 0x73, 0x8c, 0xc5, 0xff, 0x00, 0xc5, 0xff, 0x8c, /* 45% */
	0xbf, 0x80, 0x00, 0x40, 0xff, 0x00, 0x40, 0x80, 0x7f, 0x40, 0xff, 0x7f, 0xbf, 0x80, 0x7f, 0xbf, 0xff, 0x00, 0xbf, 0xff, 0x7f, /* 50% */
	0xb9, 0x8c, 0x00, 0x46, 0xff, 0x00, 0x46, 0x8c, 0x73, 0x46, 0xff, 0x73, 0xb9, 0x8c, 0x73, 0xb9, 0xff, 0x00, 0xb9, 0xff, 0x73, /* 55% */
	0xb2, 0x99, 0x00, 0x4c, 0xff, 0x00, 0x4c, 0x99, 0x66, 0x4c, 0xff, 0x66, 0xb2, 0x99, 0x66, 0xb2, 0xff, 0x00, 0xb2, 0xff, 0x66, /* 60% */

	//Yellow
	0xff, 0x33, 0x00, 0x33, 0xff, 0x00, 0x33, 0x33, 0xcc, 0x33, 0xff, 0xcc, 0xff, 0x33, 0xcc, 0xff, 0xff, 0x00, 0xff, 0xff, 0xcc, /* 20% */
	0xff, 0x40, 0x00, 0x40, 0xff, 0x00, 0x40, 0x40, 0xbf, 0x40, 0xff, 0xbf, 0xff, 0x40, 0xbf, 0xff, 0xff, 0x00, 0xff, 0xff, 0xbf, /* 25% */
	0xff, 0x4d, 0x00, 0x4d, 0xff, 0x00, 0x4d, 0x4d, 0xb2, 0x4d, 0xff, 0xb2, 0xff, 0x4d, 0xb2, 0xff, 0xff, 0x00, 0xff, 0xff, 0xb2, /* 30% */
	0xff, 0x59, 0x00, 0x59, 0xff, 0x00, 0x59, 0x59, 0xa6, 0x59, 0xff, 0xa6, 0xff, 0x59, 0xa6, 0xff, 0xff, 0x00, 0xff, 0xff, 0xa6, /* 35% */
	0xff, 0x66, 0x00, 0x66, 0xff, 0x00, 0x66, 0x66, 0x99, 0x66, 0xff, 0x99, 0xff, 0x66, 0x99, 0xff, 0xff, 0x00, 0xff, 0xff, 0x99, /* 40% */
	0xff, 0x73, 0x00, 0x73, 0xff, 0x00, 0x73, 0x73, 0x8c, 0x73, 0xff, 0x8c, 0xff, 0x73, 0x8c, 0xff, 0xff, 0x00, 0xff, 0xff, 0x8c, /* 45% */
	0xff, 0x80, 0x00, 0x80, 0xff, 0x00, 0x80, 0x80, 0x7f, 0x80, 0xff, 0x7f, 0xff, 0x80, 0x7f, 0xff, 0xff, 0x00, 0xff, 0xff, 0x7f, /* 50% */
	0xff, 0x8c, 0x00, 0x8c, 0xff, 0x00, 0x8c, 0x8c, 0x73, 0x8c, 0xff, 0x73, 0xff, 0x8c, 0x73, 0xff, 0xff, 0x00, 0xff, 0xff, 0x73, /* 55% */
	0xff, 0x99, 0x00, 0x99, 0xff, 0x00, 0x99, 0x99, 0x66, 0x99, 0xff, 0x66, 0xff, 0x99, 0x66, 0xff, 0xff, 0x00, 0xff, 0xff, 0x66, /* 60% */

	//Orange
	0xff, 0x19, 0x00, 0x33, 0xe5, 0x00, 0x33, 0x19, 0xcc, 0x33, 0xe5, 0xcc, 0xff, 0x19, 0xcc, 0xff, 0xe5, 0x00, 0xff, 0xe5, 0xcc, /* 20% */
	0xff, 0x20, 0x00, 0x40, 0xdf, 0x00, 0x40, 0x20, 0xbf, 0x40, 0xdf, 0xbf, 0xff, 0x20, 0xbf, 0xff, 0xdf, 0x00, 0xff, 0xdf, 0xbf, /* 25% */
	0xff, 0x26, 0x00, 0x4d, 0xd8, 0x00, 0x4d, 0x26, 0xb2, 0x4d, 0xd8, 0xb2, 0xff, 0x26, 0xb2, 0xff, 0xd8, 0x00, 0xff, 0xd8, 0xb2, /* 30% */
	0xff, 0x2c, 0x00, 0x59, 0xd2, 0x00, 0x59, 0x2c, 0xa6, 0x59, 0xd2, 0xa6, 0xff, 0x2c, 0xa6, 0xff, 0xd2, 0x00, 0xff, 0xd2, 0xa6, /* 35% */
	0xff, 0x33, 0x00, 0x66, 0xcc, 0x00, 0x66, 0x33, 0x99, 0x66, 0xcc, 0x99, 0xff, 0x33, 0x99, 0xff, 0xcc, 0x00, 0xff, 0xcc, 0x99, /* 40% */
	0xff, 0x39, 0x00, 0x73, 0xc5, 0x00, 0x73, 0x39, 0x8c, 0x73, 0xc5, 0x8c, 0xff, 0x39, 0x8c, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x8c, /* 45% */
	0xff, 0x40, 0x00, 0x80, 0xbf, 0x00, 0x80, 0x40, 0x7f, 0x80, 0xbf, 0x7f, 0xff, 0x40, 0x7f, 0xff, 0xbf, 0x00, 0xff, 0xbf, 0x7f, /* 50% */
	0xff, 0x46, 0x00, 0x8c, 0xb9, 0x00, 0x8c, 0x46, 0x73, 0x8c, 0xb9, 0x73, 0xff, 0x46, 0x73, 0xff, 0xb9, 0x00, 0xff, 0xb9, 0x73, /* 55% */
	0xff, 0x4c, 0x00, 0x99, 0xb2, 0x00, 0x99, 0x4c, 0x66, 0x99, 0xb2, 0x66, 0xff, 0x4c, 0x66, 0xff, 0xb2, 0x00, 0xff, 0xb2, 0x66, /* 60% */

	//Red
	0xff, 0x00, 0x00, 0x33, 0xcc, 0x00, 0x33, 0x00, 0xcc, 0x33, 0xcc, 0xcc, 0xff, 0x00, 0xcc, 0xff, 0xcc, 0x00, 0xff, 0xcc, 0xcc, /* 20% */
	0xff, 0x00, 0x00, 0x40, 0xbf, 0x00, 0x40, 0x00, 0xbf, 0x40, 0xbf, 0xbf, 0xff, 0x00, 0xbf, 0xff, 0xbf, 0x00, 0xff, 0xbf, 0xbf, /* 25% */
	0xff, 0x00, 0x00, 0x4d, 0xb2, 0x00, 0x4d, 0x00, 0xb2, 0x4d, 0xb2, 0xb2, 0xff, 0x00, 0xb2, 0xff, 0xb2, 0x00, 0xff, 0xb2, 0xb2, /* 30% */
	0xff, 0x00, 0x00, 0x59, 0xa6, 0x00, 0x59, 0x00, 0xa6, 0x59, 0xa6, 0xa6, 0xff, 0x00, 0xa6, 0xff, 0xa6, 0x00, 0xff, 0xa6, 0xa6, /* 35% */
	0xff, 0x00, 0x00, 0x66, 0x99, 0x00, 0x66, 0x00, 0x99, 0x66, 0x99, 0x99, 0xff, 0x00, 0x99, 0xff, 0x99, 0x00, 0xff, 0x99, 0x99, /* 40% */
	0xff, 0x00, 0x00, 0x73, 0x8c, 0x00, 0x73, 0x00, 0x8c, 0x73, 0x8c, 0x8c, 0xff, 0x00, 0x8c, 0xff, 0x8c, 0x00, 0xff, 0x8c, 0x8c, /* 45% */
	0xff, 0x00, 0x00, 0x80, 0x7f, 0x00, 0x80, 0x00, 0x7f, 0x80, 0x7f, 0x7f, 0xff, 0x00, 0x7f, 0xff, 0x7f, 0x00, 0xff, 0x7f, 0x7f, /* 50% */
	0xff, 0x00, 0x00, 0x8c, 0x73, 0x00, 0x8c, 0x00, 0x73, 0x8c, 0x73, 0x73, 0xff, 0x00, 0x73, 0xff, 0x73, 0x00, 0xff, 0x73, 0x73, /* 55% */
	0xff, 0x00, 0x00, 0x99, 0x66, 0x00, 0x99, 0x00, 0x66, 0x99, 0x66, 0x66, 0xff, 0x00, 0x66, 0xff, 0x66, 0x00, 0xff, 0x66, 0x66, /* 60% */

	//Rose
	0xff, 0x00, 0x19, 0x33, 0xcc, 0x19, 0x33, 0x00, 0xe5, 0x33, 0xcc, 0xe5, 0xff, 0x00, 0xe5, 0xff, 0xcc, 0x19, 0xff, 0xcc, 0xe5, /* 20% */
	0xff, 0x00, 0x20, 0x40, 0xbf, 0x20, 0x40, 0x00, 0xdf, 0x40, 0xbf, 0xdf, 0xff, 0x00, 0xdf, 0xff, 0xbf, 0x20, 0xff, 0xbf, 0xdf, /* 25% */
	0xff, 0x00, 0x26, 0x4d, 0xb2, 0x26, 0x4d, 0x00, 0xd8, 0x4d, 0xb2, 0xd8, 0xff, 0x00, 0xd8, 0xff, 0xb2, 0x26, 0xff, 0xb2, 0xd8, /* 30% */
	0xff, 0x00, 0x2c, 0x59, 0xa6, 0x2c, 0x59, 0x00, 0xd2, 0x59, 0xa6, 0xd2, 0xff, 0x00, 0xd2, 0xff, 0xa6, 0x2c, 0xff, 0xa6, 0xd2, /* 35% */
	0xff, 0x00, 0x33, 0x66, 0x99, 0x33, 0x66, 0x00, 0xcc, 0x66, 0x99, 0xcc, 0xff, 0x00, 0xcc, 0xff, 0x99, 0x33, 0xff, 0x99, 0xcc, /* 40% */
	0xff, 0x00, 0x39, 0x73, 0x8c, 0x39, 0x73, 0x00, 0xc5, 0x73, 0x8c, 0xc5, 0xff, 0x00, 0xc5, 0xff, 0x8c, 0x39, 0xff, 0x8c, 0xc5, /* 45% */
	0xff, 0x00, 0x40, 0x80, 0x7f, 0x40, 0x80, 0x00, 0xbf, 0x80, 0x7f, 0xbf, 0xff, 0x00, 0xbf, 0xff, 0x7f, 0x40, 0xff, 0x7f, 0xbf, /* 50% */
	0xff, 0x00, 0x46, 0x8c, 0x73, 0x46, 0x8c, 0x00, 0xb9, 0x8c, 0x73, 0xb9, 0xff, 0x00, 0xb9, 0xff, 0x73, 0x46, 0xff, 0x73, 0xb9, /* 55% */
	0xff, 0x00, 0x4c, 0x99, 0x66, 0x4c, 0x99, 0x00, 0xb2, 0x99, 0x66, 0xb2, 0xff, 0x00, 0xb2, 0xff, 0x66, 0x4c, 0xff, 0x66, 0xb2, /* 60% */

	//Magenta
	0xff, 0x00, 0x33, 0x33, 0xcc, 0x33, 0x33, 0x00, 0xff, 0x33, 0xcc, 0xff, 0xff, 0x00, 0xff, 0xff, 0xcc, 0x33, 0xff, 0xcc, 0xff, /* 20% */
	0xff, 0x00, 0x40, 0x40, 0xbf, 0x40, 0x40, 0x00, 0xff, 0x40, 0xbf, 0xff, 0xff, 0x00, 0xff, 0xff, 0xbf, 0x40, 0xff, 0xbf, 0xff, /* 25% */
	0xff, 0x00, 0x4d, 0x4d, 0xb2, 0x4d, 0x4d, 0x00, 0xff, 0x4d, 0xb2, 0xff, 0xff, 0x00, 0xff, 0xff, 0xb2, 0x4d, 0xff, 0xb2, 0xff, /* 30% */
	0xff, 0x00, 0x59, 0x59, 0xa6, 0x59, 0x59, 0x00, 0xff, 0x59, 0xa6, 0xff, 0xff, 0x00, 0xff, 0xff, 0xa6, 0x59, 0xff, 0xa6, 0xff, /* 35% */
	0xff, 0x00, 0x66, 0x66, 0x99, 0x66, 0x66, 0x00, 0xff, 0x66, 0x99, 0xff, 0xff, 0x00, 0xff, 0xff, 0x99, 0x66, 0xff, 0x99, 0xff, /* 40% */
	0xff, 0x00, 0x73, 0x73, 0x8c, 0x73, 0x73, 0x00, 0xff, 0x73, 0x8c, 0xff, 0xff, 0x00, 0xff, 0xff, 0x8c, 0x73, 0xff, 0x8c, 0xff, /* 45% */
	0xff, 0x00, 0x80, 0x80, 0x7f, 0x80, 0x80, 0x00, 0xff, 0x80, 0x7f, 0xff, 0xff, 0x00, 0xff, 0xff, 0x7f, 0x80, 0xff, 0x7f, 0xff, /* 50% */
	0xff, 0x00, 0x8c, 0x8c, 0x73, 0x8c, 0x8c, 0x00, 0xff, 0x8c, 0x73, 0xff, 0xff, 0x00, 0xff, 0xff, 0x73, 0x8c, 0xff, 0x73, 0xff, /* 55% */
	0xff, 0x00, 0x99, 0x99, 0x66, 0x99, 0x99, 0x00, 0xff, 0x99, 0x66, 0xff, 0xff, 0x00, 0xff, 0xff, 0x66, 0x99, 0xff, 0x66, 0xff, /* 60% */

	//Violet
	0xe5, 0x00, 0x33, 0x19, 0xcc, 0x33, 0x19, 0x00, 0xff, 0x19, 0xcc, 0xff, 0xe5, 0x00, 0xff, 0xe5, 0xcc, 0x33, 0xe5, 0xcc, 0xff, /* 20% */
	0xdf, 0x00, 0x40, 0x20, 0xbf, 0x40, 0x20, 0x00, 0xff, 0x20, 0xbf, 0xff, 0xdf, 0x00, 0xff, 0xdf, 0xbf, 0x40, 0xdf, 0xbf, 0xff, /* 25% */
	0xd8, 0x00, 0x4d, 0x26, 0xb2, 0x4d, 0x26, 0x00, 0xff, 0x26, 0xb2, 0xff, 0xd8, 0x00, 0xff, 0xd8, 0xb2, 0x4d, 0xd8, 0xb2, 0xff, /* 30% */
	0xd2, 0x00, 0x59, 0x2c, 0xa6, 0x59, 0x2c, 0x00, 0xff, 0x2c, 0xa6, 0xff, 0xd2, 0x00, 0xff, 0xd2, 0xa6, 0x59, 0xd2, 0xa6, 0xff, /* 35% */
	0xcc, 0x00, 0x66, 0x33, 0x99, 0x66, 0x33, 0x00, 0xff, 0x33, 0x99, 0xff, 0xcc, 0x00, 0xff, 0xcc, 0x99, 0x66, 0xcc, 0x99, 0xff, /* 40% */
	0xc5, 0x00, 0x73, 0x39, 0x8c, 0x73, 0x39, 0x00, 0xff, 0x39, 0x8c, 0xff, 0xc5, 0x00, 0xff, 0xc5, 0x8c, 0x73, 0xc5, 0x8c, 0xff, /* 45% */
	0xbf, 0x00, 0x80, 0x40, 0x7f, 0x80, 0x40, 0x00, 0xff, 0x40, 0x7f, 0xff, 0xbf, 0x00, 0xff, 0xbf, 0x7f, 0x80, 0xbf, 0x7f, 0xff, /* 50% */
	0xb9, 0x00, 0x8c, 0x46, 0x73, 0x8c, 0x46, 0x00, 0xff, 0x46, 0x73, 0xff, 0xb9, 0x00, 0xff, 0xb9, 0x73, 0x8c, 0xb9, 0x73, 0xff, /* 55% */
	0xb2, 0x00, 0x99, 0x4c, 0x66, 0x99, 0x4c, 0x00, 0xff, 0x4c, 0x66, 0xff, 0xb2, 0x00, 0xff, 0xb2, 0x66, 0x99, 0xb2, 0x66, 0xff, /* 60% */
};

static inline int get_hbm_index(int idx)
{
	int i = 0;
	int idx_list[] = {
		30000	/* idx < 40000: HBM_OFF */
				/* idx >= 40000: HBM_ON */
	};

	while (i < ARRAY_SIZE(idx_list)) {
		if (idx < idx_list[i])
			break;
		i++;
	}

	return i;
}

static unsigned char BYPASS_1[] = {
	/* start */
	0x64, // CRC
	0x00, // BLF disable
	0x00, // crc_bypass
	0x01, // Enable or bypass
	0xff, // crc_lut_mode1_rr
	0x00, // crc_lut_mode1_rg
	0x00, // crc_lut_mode1_rb
	0x00, // crc_lut_mode1_gr
	0xff, // crc_lut_mode1_gg
	0x00, // crc_lut_mode1_gb
	0x00, // crc_lut_mode1_br
	0x00, // crc_lut_mode1_bg
	0xff, // crc_lut_mode1_bb
	0x00, // crc_lut_mode1_cr
	0xff, // crc_lut_mode1_cg
	0xff, // crc_lut_mode1_cb
	0xff, // crc_lut_mode1_mr
	0x00, // crc_lut_mode1_mg
	0xff, // crc_lut_mode1_mb
	0xff, // crc_lut_mode1_yr
	0xff, // crc_lut_mode1_yg
	0x00, // crc_lut_mode1_yb
	0xff, // crc_lut_mode1_wr
	0xff, // crc_lut_mode1_wg
	0xff, // crc_lut_mode1_wb
};

static unsigned char BYPASS_2[] = {
	0x65, // TCS
	0x00, // IP Enable
	0x10, // Bypass, y_type
	0x01, // obj_sel, Skin Boundary Parameter
	0x02, // Skin Boundary Parameter
	0x9A,
	0x01,
	0x00,
	0x5C,
	0x01,
	0x02,
	0x89,
	0x01,
	0x00,
	0x62,
	0x01, // Grass Boundary Parameter
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01, // Sky Boundary Parameter
	0x02,
	0x49,
	0x01,
	0x00,
	0x60,
	0x01,
	0x02,
	0x5A,
	0x01,
	0x00,
	0x63,
	0x00, // Skin Boundary Parameter
	0x01,
	0x84,
	0x00,
	0x00,
	0xAF,
	0x00,
	0x01,
	0xD2,
	0x00,
	0x00,
	0xD3,
	0x00, // Grass Boundary Parameter
	0x00,
	0x9F,
	0x00,
	0x00,
	0x33,
	0x00,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x72,
	0x00, // Sky Boundary Parameter
	0x01,
	0xAE,
	0x00,
	0x00,
	0x89,
	0x00,
	0x02,
	0x16,
	0x00,
	0x00,
	0xB3,
	0x00, // Skin Boundary Parameter
	0x05,
	0x00,
	0x00,
	0x13,
	0x63,
	0x01,
	0x07,
	0x79,
	0x01,
	0x0C,
	0xD9,
	0x00, // Grass Boundary Parameter
	0x0B,
	0x24,
	0x00,
	0x0A,
	0x18,
	0x01,
	0x04,
	0x6A,
	0x01,
	0x06,
	0xCD,
	0x00, // Sky Boundary Parameter
	0x04,
	0x98,
	0x00,
	0x0F,
	0xC1,
	0x01,
	0x06,
	0xE6,
	0x01,
	0x0A,
	0xE1,
	0x67, // Skin Boundary Index
	0x62, // Grass Boundary Index
	0x61, // Sky Boundary Index
	0x80, // Skin Color Gain
	0x80, // Grass Color Gain
	0x80, // Sky Color Gain
	0x70, // Target Skin Color (Cb)
	0x52, // Target Grass Color (Cb)
	0xAE, // Target Sky Color (Cb)
	0x94, // Target Skin Color (Cr)
	0x69, // Target Grass Color (Cr)
	0x58, // Target Sky Color (Cr)
	0x00, // Threshold Value of Skin Color Detection
	0x00, // Threshold Value of Grass Color Detection
	0x00, // Threshold Value of Sky Color Detection
	0x1E, // Minimum Y of Skin Brightness Control
	0x1E, // Minimum Y of Grass Brightness Control
	0x1E, // Minimum Y of Sky Brightness Control
	0xC8, // Maximum Y of Skin Brightness Control
	0xC8, // Maximum Y of Grass Brightness Control
	0xC8, // Maximum Y of Sky Brightness Control
	0x78, // Reference Y of Skin Brightness Control
	0x78, // Reference Y of Grass Brightness Control
	0x78, // Reference Y of Sky Brightness Control
	0x78, // Target Y of Skin Brihgtness Contol
	0x78, // Target Y of Grass Brihgtness Contol
	0x78, // Target Y of Sky Brihgtness Contol
	0x00, // Brightness Parameter
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
};

static unsigned char GRAYSCALE_1[] = {
	/* start */
	0x64, // CRC
	0x00, // BLF disable
	0x00, // crc_bypass
	0x01, // Enable or bypass
	0xff, // crc_lut_mode1_rr
	0x00, // crc_lut_mode1_rg
	0x00, // crc_lut_mode1_rb
	0x00, // crc_lut_mode1_gr
	0xff, // crc_lut_mode1_gg
	0x00, // crc_lut_mode1_gb
	0x00, // crc_lut_mode1_br
	0x00, // crc_lut_mode1_bg
	0xff, // crc_lut_mode1_bb
	0x00, // crc_lut_mode1_cr
	0xff, // crc_lut_mode1_cg
	0xff, // crc_lut_mode1_cb
	0xff, // crc_lut_mode1_mr
	0x00, // crc_lut_mode1_mg
	0xff, // crc_lut_mode1_mb
	0xff, // crc_lut_mode1_yr
	0xff, // crc_lut_mode1_yg
	0x00, // crc_lut_mode1_yb
	0xff, // crc_lut_mode1_wr
	0xff, // crc_lut_mode1_wg
	0xff, // crc_lut_mode1_wb
};

static unsigned char GRAYSCALE_2[] = {
	0x65, // TCS
	0x00, // IP Enable
	0x10, // Bypass, y_type
	0x01, // obj_sel, Skin Boundary Parameter
	0x02, // Skin Boundary Parameter
	0x9A,
	0x01,
	0x00,
	0x5C,
	0x01,
	0x02,
	0x89,
	0x01,
	0x00,
	0x62,
	0x01, // Grass Boundary Parameter
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01, // Sky Boundary Parameter
	0x02,
	0x49,
	0x01,
	0x00,
	0x60,
	0x01,
	0x02,
	0x5A,
	0x01,
	0x00,
	0x63,
	0x00, // Skin Boundary Parameter
	0x01,
	0x84,
	0x00,
	0x00,
	0xAF,
	0x00,
	0x01,
	0xD2,
	0x00,
	0x00,
	0xD3,
	0x00, // Grass Boundary Parameter
	0x00,
	0x9F,
	0x00,
	0x00,
	0x33,
	0x00,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x72,
	0x00, // Sky Boundary Parameter
	0x01,
	0xAE,
	0x00,
	0x00,
	0x89,
	0x00,
	0x02,
	0x16,
	0x00,
	0x00,
	0xB3,
	0x00, // Skin Boundary Parameter
	0x05,
	0x00,
	0x00,
	0x13,
	0x63,
	0x01,
	0x07,
	0x79,
	0x01,
	0x0C,
	0xD9,
	0x00, // Grass Boundary Parameter
	0x0B,
	0x24,
	0x00,
	0x0A,
	0x18,
	0x01,
	0x04,
	0x6A,
	0x01,
	0x06,
	0xCD,
	0x00, // Sky Boundary Parameter
	0x04,
	0x98,
	0x00,
	0x0F,
	0xC1,
	0x01,
	0x06,
	0xE6,
	0x01,
	0x0A,
	0xE1,
	0x67, // Skin Boundary Index
	0x62, // Grass Boundary Index
	0x61, // Sky Boundary Index
	0x80, // Skin Color Gain
	0x80, // Grass Color Gain
	0x80, // Sky Color Gain
	0x70, // Target Skin Color (Cb)
	0x52, // Target Grass Color (Cb)
	0xAE, // Target Sky Color (Cb)
	0x94, // Target Skin Color (Cr)
	0x69, // Target Grass Color (Cr)
	0x58, // Target Sky Color (Cr)
	0x00, // Threshold Value of Skin Color Detection
	0x00, // Threshold Value of Grass Color Detection
	0x00, // Threshold Value of Sky Color Detection
	0x1E, // Minimum Y of Skin Brightness Control
	0x1E, // Minimum Y of Grass Brightness Control
	0x1E, // Minimum Y of Sky Brightness Control
	0xC8, // Maximum Y of Skin Brightness Control
	0xC8, // Maximum Y of Grass Brightness Control
	0xC8, // Maximum Y of Sky Brightness Control
	0x78, // Reference Y of Skin Brightness Control
	0x78, // Reference Y of Grass Brightness Control
	0x78, // Reference Y of Sky Brightness Control
	0x78, // Target Y of Skin Brihgtness Contol
	0x78, // Target Y of Grass Brihgtness Contol
	0x78, // Target Y of Sky Brihgtness Contol
	0x00, // Brightness Parameter
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
};

static unsigned char GRAYSCALE_NEGATIVE_1[] = {
	/* start */
	0x64, // CRC
	0x00, // BLF disable
	0x00, // crc_bypass
	0x01, // Enable or bypass
	0xff, // crc_lut_mode1_rr
	0x00, // crc_lut_mode1_rg
	0x00, // crc_lut_mode1_rb
	0x00, // crc_lut_mode1_gr
	0xff, // crc_lut_mode1_gg
	0x00, // crc_lut_mode1_gb
	0x00, // crc_lut_mode1_br
	0x00, // crc_lut_mode1_bg
	0xff, // crc_lut_mode1_bb
	0x00, // crc_lut_mode1_cr
	0xff, // crc_lut_mode1_cg
	0xff, // crc_lut_mode1_cb
	0xff, // crc_lut_mode1_mr
	0x00, // crc_lut_mode1_mg
	0xff, // crc_lut_mode1_mb
	0xff, // crc_lut_mode1_yr
	0xff, // crc_lut_mode1_yg
	0x00, // crc_lut_mode1_yb
	0xff, // crc_lut_mode1_wr
	0xff, // crc_lut_mode1_wg
	0xff, // crc_lut_mode1_wb
};

static unsigned char GRAYSCALE_NEGATIVE_2[] = {
	0x65, // TCS
	0x00, // IP Enable
	0x10, // Bypass, y_type
	0x01, // obj_sel, Skin Boundary Parameter
	0x02, // Skin Boundary Parameter
	0x9A,
	0x01,
	0x00,
	0x5C,
	0x01,
	0x02,
	0x89,
	0x01,
	0x00,
	0x62,
	0x01, // Grass Boundary Parameter
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01, // Sky Boundary Parameter
	0x02,
	0x49,
	0x01,
	0x00,
	0x60,
	0x01,
	0x02,
	0x5A,
	0x01,
	0x00,
	0x63,
	0x00, // Skin Boundary Parameter
	0x01,
	0x84,
	0x00,
	0x00,
	0xAF,
	0x00,
	0x01,
	0xD2,
	0x00,
	0x00,
	0xD3,
	0x00, // Grass Boundary Parameter
	0x00,
	0x9F,
	0x00,
	0x00,
	0x33,
	0x00,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x72,
	0x00, // Sky Boundary Parameter
	0x01,
	0xAE,
	0x00,
	0x00,
	0x89,
	0x00,
	0x02,
	0x16,
	0x00,
	0x00,
	0xB3,
	0x00, // Skin Boundary Parameter
	0x05,
	0x00,
	0x00,
	0x13,
	0x63,
	0x01,
	0x07,
	0x79,
	0x01,
	0x0C,
	0xD9,
	0x00, // Grass Boundary Parameter
	0x0B,
	0x24,
	0x00,
	0x0A,
	0x18,
	0x01,
	0x04,
	0x6A,
	0x01,
	0x06,
	0xCD,
	0x00, // Sky Boundary Parameter
	0x04,
	0x98,
	0x00,
	0x0F,
	0xC1,
	0x01,
	0x06,
	0xE6,
	0x01,
	0x0A,
	0xE1,
	0x67, // Skin Boundary Index
	0x62, // Grass Boundary Index
	0x61, // Sky Boundary Index
	0x80, // Skin Color Gain
	0x80, // Grass Color Gain
	0x80, // Sky Color Gain
	0x70, // Target Skin Color (Cb)
	0x52, // Target Grass Color (Cb)
	0xAE, // Target Sky Color (Cb)
	0x94, // Target Skin Color (Cr)
	0x69, // Target Grass Color (Cr)
	0x58, // Target Sky Color (Cr)
	0x00, // Threshold Value of Skin Color Detection
	0x00, // Threshold Value of Grass Color Detection
	0x00, // Threshold Value of Sky Color Detection
	0x1E, // Minimum Y of Skin Brightness Control
	0x1E, // Minimum Y of Grass Brightness Control
	0x1E, // Minimum Y of Sky Brightness Control
	0xC8, // Maximum Y of Skin Brightness Control
	0xC8, // Maximum Y of Grass Brightness Control
	0xC8, // Maximum Y of Sky Brightness Control
	0x78, // Reference Y of Skin Brightness Control
	0x78, // Reference Y of Grass Brightness Control
	0x78, // Reference Y of Sky Brightness Control
	0x78, // Target Y of Skin Brihgtness Contol
	0x78, // Target Y of Grass Brihgtness Contol
	0x78, // Target Y of Sky Brihgtness Contol
	0x00, // Brightness Parameter
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
};

static unsigned char NEGATIVE_1[] = {
	/* start */
	0x64, // CRC
	0x00, // BLF disable
	0x00, // crc_bypass
	0x01, // Enable or bypass
	0xff, // crc_lut_mode1_rr
	0x00, // crc_lut_mode1_rg
	0x00, // crc_lut_mode1_rb
	0x00, // crc_lut_mode1_gr
	0xff, // crc_lut_mode1_gg
	0x00, // crc_lut_mode1_gb
	0x00, // crc_lut_mode1_br
	0x00, // crc_lut_mode1_bg
	0xff, // crc_lut_mode1_bb
	0x00, // crc_lut_mode1_cr
	0xff, // crc_lut_mode1_cg
	0xff, // crc_lut_mode1_cb
	0xff, // crc_lut_mode1_mr
	0x00, // crc_lut_mode1_mg
	0xff, // crc_lut_mode1_mb
	0xff, // crc_lut_mode1_yr
	0xff, // crc_lut_mode1_yg
	0x00, // crc_lut_mode1_yb
	0xff, // crc_lut_mode1_wr
	0xff, // crc_lut_mode1_wg
	0xff, // crc_lut_mode1_wb
};

static unsigned char NEGATIVE_2[] = {
	0x65, // TCS
	0x00, // IP Enable
	0x10, // Bypass, y_type
	0x01, // obj_sel, Skin Boundary Parameter
	0x02, // Skin Boundary Parameter
	0x9A,
	0x01,
	0x00,
	0x5C,
	0x01,
	0x02,
	0x89,
	0x01,
	0x00,
	0x62,
	0x01, // Grass Boundary Parameter
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01, // Sky Boundary Parameter
	0x02,
	0x49,
	0x01,
	0x00,
	0x60,
	0x01,
	0x02,
	0x5A,
	0x01,
	0x00,
	0x63,
	0x00, // Skin Boundary Parameter
	0x01,
	0x84,
	0x00,
	0x00,
	0xAF,
	0x00,
	0x01,
	0xD2,
	0x00,
	0x00,
	0xD3,
	0x00, // Grass Boundary Parameter
	0x00,
	0x9F,
	0x00,
	0x00,
	0x33,
	0x00,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x72,
	0x00, // Sky Boundary Parameter
	0x01,
	0xAE,
	0x00,
	0x00,
	0x89,
	0x00,
	0x02,
	0x16,
	0x00,
	0x00,
	0xB3,
	0x00, // Skin Boundary Parameter
	0x05,
	0x00,
	0x00,
	0x13,
	0x63,
	0x01,
	0x07,
	0x79,
	0x01,
	0x0C,
	0xD9,
	0x00, // Grass Boundary Parameter
	0x0B,
	0x24,
	0x00,
	0x0A,
	0x18,
	0x01,
	0x04,
	0x6A,
	0x01,
	0x06,
	0xCD,
	0x00, // Sky Boundary Parameter
	0x04,
	0x98,
	0x00,
	0x0F,
	0xC1,
	0x01,
	0x06,
	0xE6,
	0x01,
	0x0A,
	0xE1,
	0x67, // Skin Boundary Index
	0x62, // Grass Boundary Index
	0x61, // Sky Boundary Index
	0x80, // Skin Color Gain
	0x80, // Grass Color Gain
	0x80, // Sky Color Gain
	0x70, // Target Skin Color (Cb)
	0x52, // Target Grass Color (Cb)
	0xAE, // Target Sky Color (Cb)
	0x94, // Target Skin Color (Cr)
	0x69, // Target Grass Color (Cr)
	0x58, // Target Sky Color (Cr)
	0x00, // Threshold Value of Skin Color Detection
	0x00, // Threshold Value of Grass Color Detection
	0x00, // Threshold Value of Sky Color Detection
	0x1E, // Minimum Y of Skin Brightness Control
	0x1E, // Minimum Y of Grass Brightness Control
	0x1E, // Minimum Y of Sky Brightness Control
	0xC8, // Maximum Y of Skin Brightness Control
	0xC8, // Maximum Y of Grass Brightness Control
	0xC8, // Maximum Y of Sky Brightness Control
	0x78, // Reference Y of Skin Brightness Control
	0x78, // Reference Y of Grass Brightness Control
	0x78, // Reference Y of Sky Brightness Control
	0x78, // Target Y of Skin Brihgtness Contol
	0x78, // Target Y of Grass Brihgtness Contol
	0x78, // Target Y of Sky Brihgtness Contol
	0x00, // Brightness Parameter
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
};

static unsigned char NIGHT_MODE_1[] = {
	/* start */
	0x64, // CRC
	0x00, // BLF disable
	0x03, // crc_bypass
	0x00, // Enable or bypass
	0xff, // crc_lut_mode1_rr
	0x00, // crc_lut_mode1_rg
	0x00, // crc_lut_mode1_rb
	0x0e, // crc_lut_mode1_gr
	0xff, // crc_lut_mode1_gg
	0x00, // crc_lut_mode1_gb
	0x00, // crc_lut_mode1_br
	0x00, // crc_lut_mode1_bg
	0xff, // crc_lut_mode1_bb
	0x03, // crc_lut_mode1_cr
	0xe5, // crc_lut_mode1_cg
	0xff, // crc_lut_mode1_cb
	0xff, // crc_lut_mode1_mr
	0x00, // crc_lut_mode1_mg
	0xff, // crc_lut_mode1_mb
	0xff, // crc_lut_mode1_yr
	0xff, // crc_lut_mode1_yg
	0x00, // crc_lut_mode1_yb
	0xff, // crc_lut_mode1_wr
	0xff, // crc_lut_mode1_wg
	0xff, // crc_lut_mode1_wb
};

static unsigned char NIGHT_MODE_2[] = {
	0x65, // TCS
	0x00, // IP Enable
	0x10, // Bypass, y_type
	0x01, // obj_sel, Skin Boundary Parameter
	0x02, // Skin Boundary Parameter
	0x9A,
	0x01,
	0x00,
	0x5C,
	0x01,
	0x02,
	0x89,
	0x01,
	0x00,
	0x62,
	0x01, // Grass Boundary Parameter
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01, // Sky Boundary Parameter
	0x02,
	0x49,
	0x01,
	0x00,
	0x60,
	0x01,
	0x02,
	0x5A,
	0x01,
	0x00,
	0x63,
	0x00, // Skin Boundary Parameter
	0x01,
	0x84,
	0x00,
	0x00,
	0xAF,
	0x00,
	0x01,
	0xD2,
	0x00,
	0x00,
	0xD3,
	0x00, // Grass Boundary Parameter
	0x00,
	0x9F,
	0x00,
	0x00,
	0x33,
	0x00,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x72,
	0x00, // Sky Boundary Parameter
	0x01,
	0xAE,
	0x00,
	0x00,
	0x89,
	0x00,
	0x02,
	0x16,
	0x00,
	0x00,
	0xB3,
	0x00, // Skin Boundary Parameter
	0x05,
	0x00,
	0x00,
	0x13,
	0x63,
	0x01,
	0x07,
	0x79,
	0x01,
	0x0C,
	0xD9,
	0x00, // Grass Boundary Parameter
	0x0B,
	0x24,
	0x00,
	0x0A,
	0x18,
	0x01,
	0x04,
	0x6A,
	0x01,
	0x06,
	0xCD,
	0x00, // Sky Boundary Parameter
	0x04,
	0x98,
	0x00,
	0x0F,
	0xC1,
	0x01,
	0x06,
	0xE6,
	0x01,
	0x0A,
	0xE1,
	0x67, // Skin Boundary Index
	0x62, // Grass Boundary Index
	0x61, // Sky Boundary Index
	0x80, // Skin Color Gain
	0x80, // Grass Color Gain
	0x80, // Sky Color Gain
	0x70, // Target Skin Color (Cb)
	0x52, // Target Grass Color (Cb)
	0xAE, // Target Sky Color (Cb)
	0x94, // Target Skin Color (Cr)
	0x69, // Target Grass Color (Cr)
	0x58, // Target Sky Color (Cr)
	0x00, // Threshold Value of Skin Color Detection
	0x00, // Threshold Value of Grass Color Detection
	0x00, // Threshold Value of Sky Color Detection
	0x1E, // Minimum Y of Skin Brightness Control
	0x1E, // Minimum Y of Grass Brightness Control
	0x1E, // Minimum Y of Sky Brightness Control
	0xC8, // Maximum Y of Skin Brightness Control
	0xC8, // Maximum Y of Grass Brightness Control
	0xC8, // Maximum Y of Sky Brightness Control
	0x78, // Reference Y of Skin Brightness Control
	0x78, // Reference Y of Grass Brightness Control
	0x78, // Reference Y of Sky Brightness Control
	0x78, // Target Y of Skin Brihgtness Contol
	0x78, // Target Y of Grass Brihgtness Contol
	0x78, // Target Y of Sky Brihgtness Contol
	0x00, // Brightness Parameter
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
};



static unsigned char COLOR_LENS_1[] = {
	/* start */
	0x64, // CRC
	0x00, // BLF disable
	0x00, // crc_bypass
	0x01, // Enable or bypass
	0xff, // crc_lut_mode1_rr
	0x00, // crc_lut_mode1_rg
	0x00, // crc_lut_mode1_rb
	0x00, // crc_lut_mode1_gr
	0xff, // crc_lut_mode1_gg
	0x00, // crc_lut_mode1_gb
	0x00, // crc_lut_mode1_br
	0x00, // crc_lut_mode1_bg
	0xff, // crc_lut_mode1_bb
	0x00, // crc_lut_mode1_cr
	0xff, // crc_lut_mode1_cg
	0xff, // crc_lut_mode1_cb
	0xff, // crc_lut_mode1_mr
	0x00, // crc_lut_mode1_mg
	0xff, // crc_lut_mode1_mb
	0xff, // crc_lut_mode1_yr
	0xff, // crc_lut_mode1_yg
	0x00, // crc_lut_mode1_yb
	0xff, // crc_lut_mode1_wr
	0xff, // crc_lut_mode1_wg
	0xff, // crc_lut_mode1_wb
};

static unsigned char COLOR_LENS_2[] = {
	0x65, // TCS
	0x00, // IP Enable
	0x10, // Bypass, y_type
	0x01, // obj_sel, Skin Boundary Parameter
	0x02, // Skin Boundary Parameter
	0x9A,
	0x01,
	0x00,
	0x5C,
	0x01,
	0x02,
	0x89,
	0x01,
	0x00,
	0x62,
	0x01, // Grass Boundary Parameter
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01, // Sky Boundary Parameter
	0x02,
	0x49,
	0x01,
	0x00,
	0x60,
	0x01,
	0x02,
	0x5A,
	0x01,
	0x00,
	0x63,
	0x00, // Skin Boundary Parameter
	0x01,
	0x84,
	0x00,
	0x00,
	0xAF,
	0x00,
	0x01,
	0xD2,
	0x00,
	0x00,
	0xD3,
	0x00, // Grass Boundary Parameter
	0x00,
	0x9F,
	0x00,
	0x00,
	0x33,
	0x00,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x72,
	0x00, // Sky Boundary Parameter
	0x01,
	0xAE,
	0x00,
	0x00,
	0x89,
	0x00,
	0x02,
	0x16,
	0x00,
	0x00,
	0xB3,
	0x00, // Skin Boundary Parameter
	0x05,
	0x00,
	0x00,
	0x13,
	0x63,
	0x01,
	0x07,
	0x79,
	0x01,
	0x0C,
	0xD9,
	0x00, // Grass Boundary Parameter
	0x0B,
	0x24,
	0x00,
	0x0A,
	0x18,
	0x01,
	0x04,
	0x6A,
	0x01,
	0x06,
	0xCD,
	0x00, // Sky Boundary Parameter
	0x04,
	0x98,
	0x00,
	0x0F,
	0xC1,
	0x01,
	0x06,
	0xE6,
	0x01,
	0x0A,
	0xE1,
	0x67, // Skin Boundary Index
	0x62, // Grass Boundary Index
	0x61, // Sky Boundary Index
	0x80, // Skin Color Gain
	0x80, // Grass Color Gain
	0x80, // Sky Color Gain
	0x70, // Target Skin Color (Cb)
	0x52, // Target Grass Color (Cb)
	0xAE, // Target Sky Color (Cb)
	0x94, // Target Skin Color (Cr)
	0x69, // Target Grass Color (Cr)
	0x58, // Target Sky Color (Cr)
	0x00, // Threshold Value of Skin Color Detection
	0x00, // Threshold Value of Grass Color Detection
	0x00, // Threshold Value of Sky Color Detection
	0x1E, // Minimum Y of Skin Brightness Control
	0x1E, // Minimum Y of Grass Brightness Control
	0x1E, // Minimum Y of Sky Brightness Control
	0xC8, // Maximum Y of Skin Brightness Control
	0xC8, // Maximum Y of Grass Brightness Control
	0xC8, // Maximum Y of Sky Brightness Control
	0x78, // Reference Y of Skin Brightness Control
	0x78, // Reference Y of Grass Brightness Control
	0x78, // Reference Y of Sky Brightness Control
	0x78, // Target Y of Skin Brihgtness Contol
	0x78, // Target Y of Grass Brihgtness Contol
	0x78, // Target Y of Sky Brihgtness Contol
	0x00, // Brightness Parameter
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
};

static unsigned char LIGHT_NOTIFICATION_1[] = {
	/* start */
	0x64, // CRC
	0x00, // BLF disable
	0x00, // crc_bypass
	0x00, // Enable or bypass
	0xff, // crc_lut_mode1_rr
	0x60, // crc_lut_mode1_rg
	0x13, // crc_lut_mode1_rb
	0x66, // crc_lut_mode1_gr
	0xf9, // crc_lut_mode1_gg
	0x13, // crc_lut_mode1_gb
	0x66, // crc_lut_mode1_br
	0x60, // crc_lut_mode1_bg
	0xac, // crc_lut_mode1_bb
	0x66, // crc_lut_mode1_cr
	0xf9, // crc_lut_mode1_cg
	0xac, // crc_lut_mode1_cb
	0xff, // crc_lut_mode1_mr
	0x60, // crc_lut_mode1_mg
	0xac, // crc_lut_mode1_mb
	0xff, // crc_lut_mode1_yr
	0xf9, // crc_lut_mode1_yg
	0x13, // crc_lut_mode1_yb
	0xff, // crc_lut_mode1_wr
	0xf9, // crc_lut_mode1_wg
	0xac, // crc_lut_mode1_wb
};

static unsigned char LIGHT_NOTIFICATION_2[] = {
	0x65, // TCS
	0x00, // IP Enable
	0x10, // Bypass, y_type
	0x01, // obj_sel, Skin Boundary Parameter
	0x02, // Skin Boundary Parameter
	0x9A,
	0x01,
	0x00,
	0x5C,
	0x01,
	0x02,
	0x89,
	0x01,
	0x00,
	0x62,
	0x01, // Grass Boundary Parameter
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01, // Sky Boundary Parameter
	0x02,
	0x49,
	0x01,
	0x00,
	0x60,
	0x01,
	0x02,
	0x5A,
	0x01,
	0x00,
	0x63,
	0x00, // Skin Boundary Parameter
	0x01,
	0x84,
	0x00,
	0x00,
	0xAF,
	0x00,
	0x01,
	0xD2,
	0x00,
	0x00,
	0xD3,
	0x00, // Grass Boundary Parameter
	0x00,
	0x9F,
	0x00,
	0x00,
	0x33,
	0x00,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x72,
	0x00, // Sky Boundary Parameter
	0x01,
	0xAE,
	0x00,
	0x00,
	0x89,
	0x00,
	0x02,
	0x16,
	0x00,
	0x00,
	0xB3,
	0x00, // Skin Boundary Parameter
	0x05,
	0x00,
	0x00,
	0x13,
	0x63,
	0x01,
	0x07,
	0x79,
	0x01,
	0x0C,
	0xD9,
	0x00, // Grass Boundary Parameter
	0x0B,
	0x24,
	0x00,
	0x0A,
	0x18,
	0x01,
	0x04,
	0x6A,
	0x01,
	0x06,
	0xCD,
	0x00, // Sky Boundary Parameter
	0x04,
	0x98,
	0x00,
	0x0F,
	0xC1,
	0x01,
	0x06,
	0xE6,
	0x01,
	0x0A,
	0xE1,
	0x67, // Skin Boundary Index
	0x62, // Grass Boundary Index
	0x61, // Sky Boundary Index
	0x80, // Skin Color Gain
	0x80, // Grass Color Gain
	0x80, // Sky Color Gain
	0x70, // Target Skin Color (Cb)
	0x52, // Target Grass Color (Cb)
	0xAE, // Target Sky Color (Cb)
	0x94, // Target Skin Color (Cr)
	0x69, // Target Grass Color (Cr)
	0x58, // Target Sky Color (Cr)
	0x00, // Threshold Value of Skin Color Detection
	0x00, // Threshold Value of Grass Color Detection
	0x00, // Threshold Value of Sky Color Detection
	0x1E, // Minimum Y of Skin Brightness Control
	0x1E, // Minimum Y of Grass Brightness Control
	0x1E, // Minimum Y of Sky Brightness Control
	0xC8, // Maximum Y of Skin Brightness Control
	0xC8, // Maximum Y of Grass Brightness Control
	0xC8, // Maximum Y of Sky Brightness Control
	0x78, // Reference Y of Skin Brightness Control
	0x78, // Reference Y of Grass Brightness Control
	0x78, // Reference Y of Sky Brightness Control
	0x78, // Target Y of Skin Brihgtness Contol
	0x78, // Target Y of Grass Brihgtness Contol
	0x78, // Target Y of Sky Brihgtness Contol
	0x00, // Brightness Parameter
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
};

static unsigned char SCREEN_CURTAIN_1[] = {
	/* start */
	0x64, // CRC
	0x00, // BLF disable
	0x03, // crc_bypass
	0x00, // Enable or bypass
	0x00, // crc_lut_mode1_rr
	0x00, // crc_lut_mode1_rg
	0x00, // crc_lut_mode1_rb
	0x00, // crc_lut_mode1_gr
	0x00, // crc_lut_mode1_gg
	0x00, // crc_lut_mode1_gb
	0x00, // crc_lut_mode1_br
	0x00, // crc_lut_mode1_bg
	0x00, // crc_lut_mode1_bb
	0x00, // crc_lut_mode1_cr
	0x00, // crc_lut_mode1_cg
	0x00, // crc_lut_mode1_cb
	0x00, // crc_lut_mode1_mr
	0x00, // crc_lut_mode1_mg
	0x00, // crc_lut_mode1_mb
	0x00, // crc_lut_mode1_yr
	0x00, // crc_lut_mode1_yg
	0x00, // crc_lut_mode1_yb
	0x00, // crc_lut_mode1_wr
	0x00, // crc_lut_mode1_wg
	0x00, // crc_lut_mode1_wb
};

static unsigned char SCREEN_CURTAIN_2[] = {
	0x65, // TCS
	0x00, // IP Enable
	0x10, // Bypass, y_type
	0x01, // obj_sel, Skin Boundary Parameter
	0x02, // Skin Boundary Parameter
	0x9A,
	0x01,
	0x00,
	0x5C,
	0x01,
	0x02,
	0x89,
	0x01,
	0x00,
	0x62,
	0x01, // Grass Boundary Parameter
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01, // Sky Boundary Parameter
	0x02,
	0x49,
	0x01,
	0x00,
	0x60,
	0x01,
	0x02,
	0x5A,
	0x01,
	0x00,
	0x63,
	0x00, // Skin Boundary Parameter
	0x01,
	0x84,
	0x00,
	0x00,
	0xAF,
	0x00,
	0x01,
	0xD2,
	0x00,
	0x00,
	0xD3,
	0x00, // Grass Boundary Parameter
	0x00,
	0x9F,
	0x00,
	0x00,
	0x33,
	0x00,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x72,
	0x00, // Sky Boundary Parameter
	0x01,
	0xAE,
	0x00,
	0x00,
	0x89,
	0x00,
	0x02,
	0x16,
	0x00,
	0x00,
	0xB3,
	0x00, // Skin Boundary Parameter
	0x05,
	0x00,
	0x00,
	0x13,
	0x63,
	0x01,
	0x07,
	0x79,
	0x01,
	0x0C,
	0xD9,
	0x00, // Grass Boundary Parameter
	0x0B,
	0x24,
	0x00,
	0x0A,
	0x18,
	0x01,
	0x04,
	0x6A,
	0x01,
	0x06,
	0xCD,
	0x00, // Sky Boundary Parameter
	0x04,
	0x98,
	0x00,
	0x0F,
	0xC1,
	0x01,
	0x06,
	0xE6,
	0x01,
	0x0A,
	0xE1,
	0x67, // Skin Boundary Index
	0x62, // Grass Boundary Index
	0x61, // Sky Boundary Index
	0x80, // Skin Color Gain
	0x80, // Grass Color Gain
	0x80, // Sky Color Gain
	0x70, // Target Skin Color (Cb)
	0x52, // Target Grass Color (Cb)
	0xAE, // Target Sky Color (Cb)
	0x94, // Target Skin Color (Cr)
	0x69, // Target Grass Color (Cr)
	0x58, // Target Sky Color (Cr)
	0x00, // Threshold Value of Skin Color Detection
	0x00, // Threshold Value of Grass Color Detection
	0x00, // Threshold Value of Sky Color Detection
	0x1E, // Minimum Y of Skin Brightness Control
	0x1E, // Minimum Y of Grass Brightness Control
	0x1E, // Minimum Y of Sky Brightness Control
	0xC8, // Maximum Y of Skin Brightness Control
	0xC8, // Maximum Y of Grass Brightness Control
	0xC8, // Maximum Y of Sky Brightness Control
	0x78, // Reference Y of Skin Brightness Control
	0x78, // Reference Y of Grass Brightness Control
	0x78, // Reference Y of Sky Brightness Control
	0x78, // Target Y of Skin Brihgtness Contol
	0x78, // Target Y of Grass Brihgtness Contol
	0x78, // Target Y of Sky Brihgtness Contol
	0x00, // Brightness Parameter
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
};


/******************** UI ********************/
static unsigned char STANDARD_UI_1[] = {
	/* start */
	0x64, // CRC
	0x00, // BLF disable
	0x00, // crc_bypass
	0x01, // Enable or bypass
	0xff, // crc_lut_mode1_rr
	0x00, // crc_lut_mode1_rg
	0x00, // crc_lut_mode1_rb
	0x00, // crc_lut_mode1_gr
	0xff, // crc_lut_mode1_gg
	0x00, // crc_lut_mode1_gb
	0x00, // crc_lut_mode1_br
	0x00, // crc_lut_mode1_bg
	0xff, // crc_lut_mode1_bb
	0x00, // crc_lut_mode1_cr
	0xff, // crc_lut_mode1_cg
	0xff, // crc_lut_mode1_cb
	0xff, // crc_lut_mode1_mr
	0x00, // crc_lut_mode1_mg
	0xff, // crc_lut_mode1_mb
	0xff, // crc_lut_mode1_yr
	0xff, // crc_lut_mode1_yg
	0x00, // crc_lut_mode1_yb
	0xff, // crc_lut_mode1_wr
	0xff, // crc_lut_mode1_wg
	0xff, // crc_lut_mode1_wb
};

static unsigned char STANDARD_UI_2[] = {
	0x65, // TCS
	0x00, // IP Enable
	0x10, // Bypass, y_type
	0x01, // obj_sel, Skin Boundary Parameter
	0x02, // Skin Boundary Parameter
	0x9A,
	0x01,
	0x00,
	0x5C,
	0x01,
	0x02,
	0x89,
	0x01,
	0x00,
	0x62,
	0x01, // Grass Boundary Parameter
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01, // Sky Boundary Parameter
	0x02,
	0x49,
	0x01,
	0x00,
	0x60,
	0x01,
	0x02,
	0x5A,
	0x01,
	0x00,
	0x63,
	0x00, // Skin Boundary Parameter
	0x01,
	0x84,
	0x00,
	0x00,
	0xAF,
	0x00,
	0x01,
	0xD2,
	0x00,
	0x00,
	0xD3,
	0x00, // Grass Boundary Parameter
	0x00,
	0x9F,
	0x00,
	0x00,
	0x33,
	0x00,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x72,
	0x00, // Sky Boundary Parameter
	0x01,
	0xAE,
	0x00,
	0x00,
	0x89,
	0x00,
	0x02,
	0x16,
	0x00,
	0x00,
	0xB3,
	0x00, // Skin Boundary Parameter
	0x05,
	0x00,
	0x00,
	0x13,
	0x63,
	0x01,
	0x07,
	0x79,
	0x01,
	0x0C,
	0xD9,
	0x00, // Grass Boundary Parameter
	0x0B,
	0x24,
	0x00,
	0x0A,
	0x18,
	0x01,
	0x04,
	0x6A,
	0x01,
	0x06,
	0xCD,
	0x00, // Sky Boundary Parameter
	0x04,
	0x98,
	0x00,
	0x0F,
	0xC1,
	0x01,
	0x06,
	0xE6,
	0x01,
	0x0A,
	0xE1,
	0x67, // Skin Boundary Index
	0x62, // Grass Boundary Index
	0x61, // Sky Boundary Index
	0x80, // Skin Color Gain
	0x80, // Grass Color Gain
	0x80, // Sky Color Gain
	0x70, // Target Skin Color (Cb)
	0x52, // Target Grass Color (Cb)
	0xAE, // Target Sky Color (Cb)
	0x94, // Target Skin Color (Cr)
	0x69, // Target Grass Color (Cr)
	0x58, // Target Sky Color (Cr)
	0x00, // Threshold Value of Skin Color Detection
	0x00, // Threshold Value of Grass Color Detection
	0x00, // Threshold Value of Sky Color Detection
	0x1E, // Minimum Y of Skin Brightness Control
	0x1E, // Minimum Y of Grass Brightness Control
	0x1E, // Minimum Y of Sky Brightness Control
	0xC8, // Maximum Y of Skin Brightness Control
	0xC8, // Maximum Y of Grass Brightness Control
	0xC8, // Maximum Y of Sky Brightness Control
	0x78, // Reference Y of Skin Brightness Control
	0x78, // Reference Y of Grass Brightness Control
	0x78, // Reference Y of Sky Brightness Control
	0x78, // Target Y of Skin Brihgtness Contol
	0x78, // Target Y of Grass Brihgtness Contol
	0x78, // Target Y of Sky Brihgtness Contol
	0x00, // Brightness Parameter
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
};

static unsigned char NATURAL_UI_1[] = {
	/* start */
	0x64, // CRC
	0x00, // BLF disable
	0x03, // crc_bypass
	0x00, // Enable or bypass
	0xbb, // crc_lut_mode1_rr
	0x09, // crc_lut_mode1_rg
	0x05, // crc_lut_mode1_rb
	0x3a, // crc_lut_mode1_gr
	0xe7, // crc_lut_mode1_gg
	0x14, // crc_lut_mode1_gb
	0x0b, // crc_lut_mode1_br
	0x02, // crc_lut_mode1_bg
	0xc9, // crc_lut_mode1_bb
	0x3c, // crc_lut_mode1_cr
	0xee, // crc_lut_mode1_cg
	0xe1, // crc_lut_mode1_cb
	0xcb, // crc_lut_mode1_mr
	0x09, // crc_lut_mode1_mg
	0xd7, // crc_lut_mode1_mb
	0xf3, // crc_lut_mode1_yr
	0xef, // crc_lut_mode1_yg
	0x15, // crc_lut_mode1_yb
	0xff, // crc_lut_mode1_wr
	0xf6, // crc_lut_mode1_wg
	0xe9, // crc_lut_mode1_wb
};

static unsigned char NATURAL_UI_2[] = {
	0x65, // TCS
	0x00, // IP Enable
	0x10, // Bypass, y_type
	0x01, // obj_sel, Skin Boundary Parameter
	0x02, // Skin Boundary Parameter
	0x9A,
	0x01,
	0x00,
	0x5C,
	0x01,
	0x02,
	0x89,
	0x01,
	0x00,
	0x62,
	0x01, // Grass Boundary Parameter
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01, // Sky Boundary Parameter
	0x02,
	0x49,
	0x01,
	0x00,
	0x60,
	0x01,
	0x02,
	0x5A,
	0x01,
	0x00,
	0x63,
	0x00, // Skin Boundary Parameter
	0x01,
	0x84,
	0x00,
	0x00,
	0xAF,
	0x00,
	0x01,
	0xD2,
	0x00,
	0x00,
	0xD3,
	0x00, // Grass Boundary Parameter
	0x00,
	0x9F,
	0x00,
	0x00,
	0x33,
	0x00,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x72,
	0x00, // Sky Boundary Parameter
	0x01,
	0xAE,
	0x00,
	0x00,
	0x89,
	0x00,
	0x02,
	0x16,
	0x00,
	0x00,
	0xB3,
	0x00, // Skin Boundary Parameter
	0x05,
	0x00,
	0x00,
	0x13,
	0x63,
	0x01,
	0x07,
	0x79,
	0x01,
	0x0C,
	0xD9,
	0x00, // Grass Boundary Parameter
	0x0B,
	0x24,
	0x00,
	0x0A,
	0x18,
	0x01,
	0x04,
	0x6A,
	0x01,
	0x06,
	0xCD,
	0x00, // Sky Boundary Parameter
	0x04,
	0x98,
	0x00,
	0x0F,
	0xC1,
	0x01,
	0x06,
	0xE6,
	0x01,
	0x0A,
	0xE1,
	0x67, // Skin Boundary Index
	0x62, // Grass Boundary Index
	0x61, // Sky Boundary Index
	0x80, // Skin Color Gain
	0x80, // Grass Color Gain
	0x80, // Sky Color Gain
	0x70, // Target Skin Color (Cb)
	0x52, // Target Grass Color (Cb)
	0xAE, // Target Sky Color (Cb)
	0x94, // Target Skin Color (Cr)
	0x69, // Target Grass Color (Cr)
	0x58, // Target Sky Color (Cr)
	0x00, // Threshold Value of Skin Color Detection
	0x00, // Threshold Value of Grass Color Detection
	0x00, // Threshold Value of Sky Color Detection
	0x1E, // Minimum Y of Skin Brightness Control
	0x1E, // Minimum Y of Grass Brightness Control
	0x1E, // Minimum Y of Sky Brightness Control
	0xC8, // Maximum Y of Skin Brightness Control
	0xC8, // Maximum Y of Grass Brightness Control
	0xC8, // Maximum Y of Sky Brightness Control
	0x78, // Reference Y of Skin Brightness Control
	0x78, // Reference Y of Grass Brightness Control
	0x78, // Reference Y of Sky Brightness Control
	0x78, // Target Y of Skin Brihgtness Contol
	0x78, // Target Y of Grass Brihgtness Contol
	0x78, // Target Y of Sky Brihgtness Contol
	0x00, // Brightness Parameter
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
};

static unsigned char DYNAMIC_UI_1[] = {
	/* start */
	0x64, // CRC
	0x00, // BLF disable
	0x03, // crc_bypass
	0x01, // Enable or bypass
	0xff, // crc_lut_mode1_rr
	0x00, // crc_lut_mode1_rg
	0x00, // crc_lut_mode1_rb
	0x00, // crc_lut_mode1_gr
	0xff, // crc_lut_mode1_gg
	0x00, // crc_lut_mode1_gb
	0x00, // crc_lut_mode1_br
	0x00, // crc_lut_mode1_bg
	0xff, // crc_lut_mode1_bb
	0x00, // crc_lut_mode1_cr
	0xff, // crc_lut_mode1_cg
	0xff, // crc_lut_mode1_cb
	0xff, // crc_lut_mode1_mr
	0x00, // crc_lut_mode1_mg
	0xff, // crc_lut_mode1_mb
	0xff, // crc_lut_mode1_yr
	0xff, // crc_lut_mode1_yg
	0x00, // crc_lut_mode1_yb
	0xff, // crc_lut_mode1_wr
	0xfa, // crc_lut_mode1_wg
	0xf0, // crc_lut_mode1_wb
};

static unsigned char DYNAMIC_UI_2[] = {
	0x65, // TCS
	0x00, // IP Enable
	0x10, // Bypass, y_type
	0x01, // obj_sel, Skin Boundary Parameter
	0x02, // Skin Boundary Parameter
	0x9A,
	0x01,
	0x00,
	0x5C,
	0x01,
	0x02,
	0x89,
	0x01,
	0x00,
	0x62,
	0x01, // Grass Boundary Parameter
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01, // Sky Boundary Parameter
	0x02,
	0x49,
	0x01,
	0x00,
	0x60,
	0x01,
	0x02,
	0x5A,
	0x01,
	0x00,
	0x63,
	0x00, // Skin Boundary Parameter
	0x01,
	0x84,
	0x00,
	0x00,
	0xAF,
	0x00,
	0x01,
	0xD2,
	0x00,
	0x00,
	0xD3,
	0x00, // Grass Boundary Parameter
	0x00,
	0x9F,
	0x00,
	0x00,
	0x33,
	0x00,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x72,
	0x00, // Sky Boundary Parameter
	0x01,
	0xAE,
	0x00,
	0x00,
	0x89,
	0x00,
	0x02,
	0x16,
	0x00,
	0x00,
	0xB3,
	0x00, // Skin Boundary Parameter
	0x05,
	0x00,
	0x00,
	0x13,
	0x63,
	0x01,
	0x07,
	0x79,
	0x01,
	0x0C,
	0xD9,
	0x00, // Grass Boundary Parameter
	0x0B,
	0x24,
	0x00,
	0x0A,
	0x18,
	0x01,
	0x04,
	0x6A,
	0x01,
	0x06,
	0xCD,
	0x00, // Sky Boundary Parameter
	0x04,
	0x98,
	0x00,
	0x0F,
	0xC1,
	0x01,
	0x06,
	0xE6,
	0x01,
	0x0A,
	0xE1,
	0x67, // Skin Boundary Index
	0x62, // Grass Boundary Index
	0x61, // Sky Boundary Index
	0x80, // Skin Color Gain
	0x80, // Grass Color Gain
	0x80, // Sky Color Gain
	0x70, // Target Skin Color (Cb)
	0x52, // Target Grass Color (Cb)
	0xAE, // Target Sky Color (Cb)
	0x94, // Target Skin Color (Cr)
	0x69, // Target Grass Color (Cr)
	0x58, // Target Sky Color (Cr)
	0x00, // Threshold Value of Skin Color Detection
	0x00, // Threshold Value of Grass Color Detection
	0x00, // Threshold Value of Sky Color Detection
	0x1E, // Minimum Y of Skin Brightness Control
	0x1E, // Minimum Y of Grass Brightness Control
	0x1E, // Minimum Y of Sky Brightness Control
	0xC8, // Maximum Y of Skin Brightness Control
	0xC8, // Maximum Y of Grass Brightness Control
	0xC8, // Maximum Y of Sky Brightness Control
	0x78, // Reference Y of Skin Brightness Control
	0x78, // Reference Y of Grass Brightness Control
	0x78, // Reference Y of Sky Brightness Control
	0x78, // Target Y of Skin Brihgtness Contol
	0x78, // Target Y of Grass Brihgtness Contol
	0x78, // Target Y of Sky Brihgtness Contol
	0x00, // Brightness Parameter
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
};



static unsigned char AUTO_UI_1[] = {
	/* start */
	0x64, // CRC
	0x00, // BLF disable
	0x03, // crc_bypass
	0x00, // Enable or bypass
	0xd0, // crc_lut_mode1_rr
	0x00, // crc_lut_mode1_rg
	0x00, // crc_lut_mode1_rb
	0x0e, // crc_lut_mode1_gr
	0xff, // crc_lut_mode1_gg
	0x03, // crc_lut_mode1_gb
	0x00, // crc_lut_mode1_br
	0x00, // crc_lut_mode1_bg
	0xff, // crc_lut_mode1_bb
	0x00, // crc_lut_mode1_cr
	0xde, // crc_lut_mode1_cg
	0xff, // crc_lut_mode1_cb
	0xff, // crc_lut_mode1_mr
	0x00, // crc_lut_mode1_mg
	0xff, // crc_lut_mode1_mb
	0xff, // crc_lut_mode1_yr
	0xff, // crc_lut_mode1_yg
	0x00, // crc_lut_mode1_yb
	0xff, // crc_lut_mode1_wr
	0xff, // crc_lut_mode1_wg
	0xff, // crc_lut_mode1_wb
};

static unsigned char AUTO_UI_2[] = {
	0x65, // TCS
	0x01, // IP Enable
	0x10, // Bypass, y_type
	0x11, // obj_sel, Skin Boundary Parameter
	0x02, // Skin Boundary Parameter
	0x9A,
	0x01,
	0x00,
	0x5C,
	0x01,
	0x02,
	0x89,
	0x01,
	0x00,
	0x62,
	0x01, // Grass Boundary Parameter
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01, // Sky Boundary Parameter
	0x02,
	0x49,
	0x01,
	0x00,
	0x60,
	0x01,
	0x02,
	0x5A,
	0x01,
	0x00,
	0x63,
	0x00, // Skin Boundary Parameter
	0x01,
	0x84,
	0x00,
	0x00,
	0xAF,
	0x00,
	0x01,
	0xD2,
	0x00,
	0x00,
	0xD3,
	0x00, // Grass Boundary Parameter
	0x00,
	0x9F,
	0x00,
	0x00,
	0x33,
	0x00,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x72,
	0x00, // Sky Boundary Parameter
	0x01,
	0xAE,
	0x00,
	0x00,
	0x89,
	0x00,
	0x02,
	0x16,
	0x00,
	0x00,
	0xB3,
	0x00, // Skin Boundary Parameter
	0x04,
	0xA8,
	0x00,
	0x18,
	0xE6,
	0x01,
	0x08,
	0x59,
	0x01,
	0x0B,
	0x3E,
	0x00, // Grass Boundary Parameter
	0x0B,
	0x24,
	0x00,
	0x0A,
	0x18,
	0x01,
	0x04,
	0x6A,
	0x01,
	0x06,
	0xCD,
	0x00, // Sky Boundary Parameter
	0x04,
	0x98,
	0x00,
	0x0F,
	0xC1,
	0x01,
	0x06,
	0xE6,
	0x01,
	0x0A,
	0xE1,
	0x67, // Skin Boundary Index
	0x62, // Grass Boundary Index
	0x61, // Sky Boundary Index
	0x76, // Skin Color Gain
	0x80, // Grass Color Gain
	0x80, // Sky Color Gain
	0x73, // Target Skin Color (Cb)
	0x52, // Target Grass Color (Cb)
	0xAE, // Target Sky Color (Cb)
	0x90, // Target Skin Color (Cr)
	0x69, // Target Grass Color (Cr)
	0x58, // Target Sky Color (Cr)
	0x00, // Threshold Value of Skin Color Detection
	0x00, // Threshold Value of Grass Color Detection
	0x00, // Threshold Value of Sky Color Detection
	0x32, // Minimum Y of Skin Brightness Control
	0x1E, // Minimum Y of Grass Brightness Control
	0x1E, // Minimum Y of Sky Brightness Control
	0xDC, // Maximum Y of Skin Brightness Control
	0xC8, // Maximum Y of Grass Brightness Control
	0xC8, // Maximum Y of Sky Brightness Control
	0x82, // Reference Y of Skin Brightness Control
	0x78, // Reference Y of Grass Brightness Control
	0x78, // Reference Y of Sky Brightness Control
	0x94, // Target Y of Skin Brihgtness Contol
	0x78, // Target Y of Grass Brihgtness Contol
	0x78, // Target Y of Sky Brihgtness Contol
	0x01, // Brightness Parameter
	0x48,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xD6,
	0x00,
	0x80,
	0x00,
	0x80,
	0x0D,
	0xC0,
	0x00,
	0x00,
	0x00,
	0x00,
	0x9C,
	0xCD,
	0x80,
	0x00,
	0x80,
	0x00,
	0x66,
	0x66,
	0x80,
	0x00,
	0x80,
	0x00,
};

/******************** GALLERY ********************/
static unsigned char AUTO_GALLERY_1[] = {
	/* start */
	0x64, // CRC
	0x00, // BLF disable
	0x03, // crc_bypass
	0x00, // Enable or bypass
	0xd0, // crc_lut_mode1_rr
	0x00, // crc_lut_mode1_rg
	0x00, // crc_lut_mode1_rb
	0x0e, // crc_lut_mode1_gr
	0xff, // crc_lut_mode1_gg
	0x03, // crc_lut_mode1_gb
	0x00, // crc_lut_mode1_br
	0x00, // crc_lut_mode1_bg
	0xff, // crc_lut_mode1_bb
	0x00, // crc_lut_mode1_cr
	0xde, // crc_lut_mode1_cg
	0xff, // crc_lut_mode1_cb
	0xff, // crc_lut_mode1_mr
	0x00, // crc_lut_mode1_mg
	0xff, // crc_lut_mode1_mb
	0xff, // crc_lut_mode1_yr
	0xff, // crc_lut_mode1_yg
	0x00, // crc_lut_mode1_yb
	0xff, // crc_lut_mode1_wr
	0xff, // crc_lut_mode1_wg
	0xff, // crc_lut_mode1_wb
};

static unsigned char AUTO_GALLERY_2[] = {
	0x65, // TCS
	0x01, // IP Enable
	0x10, // Bypass, y_type
	0x11, // obj_sel, Skin Boundary Parameter
	0x02, // Skin Boundary Parameter
	0x9A,
	0x01,
	0x00,
	0x5C,
	0x01,
	0x02,
	0x89,
	0x01,
	0x00,
	0x62,
	0x01, // Grass Boundary Parameter
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01, // Sky Boundary Parameter
	0x02,
	0x49,
	0x01,
	0x00,
	0x60,
	0x01,
	0x02,
	0x5A,
	0x01,
	0x00,
	0x63,
	0x00, // Skin Boundary Parameter
	0x01,
	0x84,
	0x00,
	0x00,
	0xAF,
	0x00,
	0x01,
	0xD2,
	0x00,
	0x00,
	0xD3,
	0x00, // Grass Boundary Parameter
	0x00,
	0x9F,
	0x00,
	0x00,
	0x33,
	0x00,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x72,
	0x00, // Sky Boundary Parameter
	0x01,
	0xAE,
	0x00,
	0x00,
	0x89,
	0x00,
	0x02,
	0x16,
	0x00,
	0x00,
	0xB3,
	0x00, // Skin Boundary Parameter
	0x04,
	0xA8,
	0x00,
	0x18,
	0xE6,
	0x01,
	0x08,
	0x59,
	0x01,
	0x0B,
	0x3E,
	0x00, // Grass Boundary Parameter
	0x0B,
	0x24,
	0x00,
	0x0A,
	0x18,
	0x01,
	0x04,
	0x6A,
	0x01,
	0x06,
	0xCD,
	0x00, // Sky Boundary Parameter
	0x04,
	0x98,
	0x00,
	0x0F,
	0xC1,
	0x01,
	0x06,
	0xE6,
	0x01,
	0x0A,
	0xE1,
	0x67, // Skin Boundary Index
	0x62, // Grass Boundary Index
	0x61, // Sky Boundary Index
	0x76, // Skin Color Gain
	0x80, // Grass Color Gain
	0x80, // Sky Color Gain
	0x73, // Target Skin Color (Cb)
	0x52, // Target Grass Color (Cb)
	0xAE, // Target Sky Color (Cb)
	0x90, // Target Skin Color (Cr)
	0x69, // Target Grass Color (Cr)
	0x58, // Target Sky Color (Cr)
	0x00, // Threshold Value of Skin Color Detection
	0x00, // Threshold Value of Grass Color Detection
	0x00, // Threshold Value of Sky Color Detection
	0x32, // Minimum Y of Skin Brightness Control
	0x1E, // Minimum Y of Grass Brightness Control
	0x1E, // Minimum Y of Sky Brightness Control
	0xDC, // Maximum Y of Skin Brightness Control
	0xC8, // Maximum Y of Grass Brightness Control
	0xC8, // Maximum Y of Sky Brightness Control
	0x82, // Reference Y of Skin Brightness Control
	0x78, // Reference Y of Grass Brightness Control
	0x78, // Reference Y of Sky Brightness Control
	0x94, // Target Y of Skin Brihgtness Contol
	0x78, // Target Y of Grass Brihgtness Contol
	0x78, // Target Y of Sky Brihgtness Contol
	0x01, // Brightness Parameter
	0x48,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xD6,
	0x00,
	0x80,
	0x00,
	0x80,
	0x0D,
	0xC0,
	0x00,
	0x00,
	0x00,
	0x00,
	0x9C,
	0xCD,
	0x80,
	0x00,
	0x80,
	0x00,
	0x66,
	0x66,
	0x80,
	0x00,
	0x80,
	0x00,
};

/******************** VIDEO ********************/

/******************** CAMERA ********************/

/******************** BROWSER ********************/

/******************** eBOOK ********************/

static unsigned char AUTO_EBOOK_1[] = {
	/* start */
	0x64, // CRC
	0x00, // BLF disable
	0x03, // crc_bypass
	0x00, // Enable or bypass
	0xd0, // crc_lut_mode1_rr
	0x00, // crc_lut_mode1_rg
	0x00, // crc_lut_mode1_rb
	0x0e, // crc_lut_mode1_gr
	0xff, // crc_lut_mode1_gg
	0x03, // crc_lut_mode1_gb
	0x00, // crc_lut_mode1_br
	0x00, // crc_lut_mode1_bg
	0xff, // crc_lut_mode1_bb
	0x00, // crc_lut_mode1_cr
	0xde, // crc_lut_mode1_cg
	0xff, // crc_lut_mode1_cb
	0xff, // crc_lut_mode1_mr
	0x00, // crc_lut_mode1_mg
	0xff, // crc_lut_mode1_mb
	0xff, // crc_lut_mode1_yr
	0xff, // crc_lut_mode1_yg
	0x00, // crc_lut_mode1_yb
	0xff, // crc_lut_mode1_wr
	0xf9, // crc_lut_mode1_wg
	0xec, // crc_lut_mode1_wb
};

static unsigned char AUTO_EBOOK_2[] = {
	0x65, // TCS
	0x00, // IP Enable
	0x10, // Bypass, y_type
	0x01, // obj_sel, Skin Boundary Parameter
	0x02, // Skin Boundary Parameter
	0x9A,
	0x01,
	0x00,
	0x5C,
	0x01,
	0x02,
	0x89,
	0x01,
	0x00,
	0x62,
	0x01, // Grass Boundary Parameter
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01, // Sky Boundary Parameter
	0x02,
	0x49,
	0x01,
	0x00,
	0x60,
	0x01,
	0x02,
	0x5A,
	0x01,
	0x00,
	0x63,
	0x00, // Skin Boundary Parameter
	0x01,
	0x84,
	0x00,
	0x00,
	0xAF,
	0x00,
	0x01,
	0xD2,
	0x00,
	0x00,
	0xD3,
	0x00, // Grass Boundary Parameter
	0x00,
	0x9F,
	0x00,
	0x00,
	0x33,
	0x00,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x72,
	0x00, // Sky Boundary Parameter
	0x01,
	0xAE,
	0x00,
	0x00,
	0x89,
	0x00,
	0x02,
	0x16,
	0x00,
	0x00,
	0xB3,
	0x00, // Skin Boundary Parameter
	0x05,
	0x00,
	0x00,
	0x13,
	0x63,
	0x01,
	0x07,
	0x79,
	0x01,
	0x0C,
	0xD9,
	0x00, // Grass Boundary Parameter
	0x0B,
	0x24,
	0x00,
	0x0A,
	0x18,
	0x01,
	0x04,
	0x6A,
	0x01,
	0x06,
	0xCD,
	0x00, // Sky Boundary Parameter
	0x04,
	0x98,
	0x00,
	0x0F,
	0xC1,
	0x01,
	0x06,
	0xE6,
	0x01,
	0x0A,
	0xE1,
	0x67, // Skin Boundary Index
	0x62, // Grass Boundary Index
	0x61, // Sky Boundary Index
	0x80, // Skin Color Gain
	0x80, // Grass Color Gain
	0x80, // Sky Color Gain
	0x70, // Target Skin Color (Cb)
	0x52, // Target Grass Color (Cb)
	0xAE, // Target Sky Color (Cb)
	0x94, // Target Skin Color (Cr)
	0x69, // Target Grass Color (Cr)
	0x58, // Target Sky Color (Cr)
	0x00, // Threshold Value of Skin Color Detection
	0x00, // Threshold Value of Grass Color Detection
	0x00, // Threshold Value of Sky Color Detection
	0x1E, // Minimum Y of Skin Brightness Control
	0x1E, // Minimum Y of Grass Brightness Control
	0x1E, // Minimum Y of Sky Brightness Control
	0xC8, // Maximum Y of Skin Brightness Control
	0xC8, // Maximum Y of Grass Brightness Control
	0xC8, // Maximum Y of Sky Brightness Control
	0x78, // Reference Y of Skin Brightness Control
	0x78, // Reference Y of Grass Brightness Control
	0x78, // Reference Y of Sky Brightness Control
	0x78, // Target Y of Skin Brihgtness Contol
	0x78, // Target Y of Grass Brihgtness Contol
	0x78, // Target Y of Sky Brihgtness Contol
	0x00, // Brightness Parameter
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
};

/******************** DMB ********************/

#ifdef CONFIG_LCD_HMT

static unsigned char HMT_6500K_1[] = {
	/* start */
	0x64, // CRC
	0x00, // BLF disable
	0x03, // crc_bypass
	0x00, // Enable or bypass
	0xff, // crc_lut_mode1_rr
	0x00, // crc_lut_mode1_rg
	0x00, // crc_lut_mode1_rb
	0x00, // crc_lut_mode1_gr
	0xff, // crc_lut_mode1_gg
	0x00, // crc_lut_mode1_gb
	0x00, // crc_lut_mode1_br
	0x00, // crc_lut_mode1_bg
	0xf5, // crc_lut_mode1_bb
	0x00, // crc_lut_mode1_cr
	0xff, // crc_lut_mode1_cg
	0xff, // crc_lut_mode1_cb
	0xff, // crc_lut_mode1_mr
	0x00, // crc_lut_mode1_mg
	0xff, // crc_lut_mode1_mb
	0xff, // crc_lut_mode1_yr
	0xff, // crc_lut_mode1_yg
	0x00, // crc_lut_mode1_yb
	0xff, // crc_lut_mode1_wr
	0xf9, // crc_lut_mode1_wg
	0xec, // crc_lut_mode1_wb
};

static unsigned char HMT_6500K_2[] = {
	0x65, // TCS
	0x00, // IP Enable
	0x10, // Bypass, y_type
	0x01, // obj_sel, Skin Boundary Parameter
	0x02, // Skin Boundary Parameter
	0x9A,
	0x01,
	0x00,
	0x5C,
	0x01,
	0x02,
	0x89,
	0x01,
	0x00,
	0x62,
	0x01, // Grass Boundary Parameter
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01, // Sky Boundary Parameter
	0x02,
	0x49,
	0x01,
	0x00,
	0x60,
	0x01,
	0x02,
	0x5A,
	0x01,
	0x00,
	0x63,
	0x00, // Skin Boundary Parameter
	0x01,
	0x84,
	0x00,
	0x00,
	0xAF,
	0x00,
	0x01,
	0xD2,
	0x00,
	0x00,
	0xD3,
	0x00, // Grass Boundary Parameter
	0x00,
	0x9F,
	0x00,
	0x00,
	0x33,
	0x00,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x72,
	0x00, // Sky Boundary Parameter
	0x01,
	0xAE,
	0x00,
	0x00,
	0x89,
	0x00,
	0x02,
	0x16,
	0x00,
	0x00,
	0xB3,
	0x00, // Skin Boundary Parameter
	0x05,
	0x00,
	0x00,
	0x13,
	0x63,
	0x01,
	0x07,
	0x79,
	0x01,
	0x0C,
	0xD9,
	0x00, // Grass Boundary Parameter
	0x0B,
	0x24,
	0x00,
	0x0A,
	0x18,
	0x01,
	0x04,
	0x6A,
	0x01,
	0x06,
	0xCD,
	0x00, // Sky Boundary Parameter
	0x04,
	0x98,
	0x00,
	0x0F,
	0xC1,
	0x01,
	0x06,
	0xE6,
	0x01,
	0x0A,
	0xE1,
	0x67, // Skin Boundary Index
	0x62, // Grass Boundary Index
	0x61, // Sky Boundary Index
	0x80, // Skin Color Gain
	0x80, // Grass Color Gain
	0x80, // Sky Color Gain
	0x70, // Target Skin Color (Cb)
	0x52, // Target Grass Color (Cb)
	0xAE, // Target Sky Color (Cb)
	0x94, // Target Skin Color (Cr)
	0x69, // Target Grass Color (Cr)
	0x58, // Target Sky Color (Cr)
	0x00, // Threshold Value of Skin Color Detection
	0x00, // Threshold Value of Grass Color Detection
	0x00, // Threshold Value of Sky Color Detection
	0x1E, // Minimum Y of Skin Brightness Control
	0x1E, // Minimum Y of Grass Brightness Control
	0x1E, // Minimum Y of Sky Brightness Control
	0xC8, // Maximum Y of Skin Brightness Control
	0xC8, // Maximum Y of Grass Brightness Control
	0xC8, // Maximum Y of Sky Brightness Control
	0x78, // Reference Y of Skin Brightness Control
	0x78, // Reference Y of Grass Brightness Control
	0x78, // Reference Y of Sky Brightness Control
	0x78, // Target Y of Skin Brihgtness Contol
	0x78, // Target Y of Grass Brihgtness Contol
	0x78, // Target Y of Sky Brihgtness Contol
	0x00, // Brightness Parameter
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
	0x80,
	0x00,
};

#endif

static unsigned char LOCAL_CE_1[] = {
	/* start */
	0x64, // CRC
	0x00, // BLF disable
	0x03, // crc_bypass
	0x00, // Enable or bypass
	0xd0, // crc_lut_mode1_rr
	0x00, // crc_lut_mode1_rg
	0x00, // crc_lut_mode1_rb
	0x00, // crc_lut_mode1_gr
	0xff, // crc_lut_mode1_gg
	0x00, // crc_lut_mode1_gb
	0x00, // crc_lut_mode1_br
	0x00, // crc_lut_mode1_bg
	0xff, // crc_lut_mode1_bb
	0x00, // crc_lut_mode1_cr
	0xff, // crc_lut_mode1_cg
	0xff, // crc_lut_mode1_cb
	0xff, // crc_lut_mode1_mr
	0x00, // crc_lut_mode1_mg
	0xff, // crc_lut_mode1_mb
	0xff, // crc_lut_mode1_yr
	0xff, // crc_lut_mode1_yg
	0x00, // crc_lut_mode1_yb
	0xf0, // crc_lut_mode1_wr
	0xff, // crc_lut_mode1_wg
	0xff, // crc_lut_mode1_wb
};

static unsigned char LOCAL_CE_2[] = {
	0x65, // TCS
	0x01, // IP Enable
	0x10, // Bypass, y_type
	0x11, // obj_sel, Skin Boundary Parameter
	0x02, // Skin Boundary Parameter
	0x9A,
	0x01,
	0x00,
	0x5C,
	0x01,
	0x02,
	0x89,
	0x01,
	0x00,
	0x62,
	0x01, // Grass Boundary Parameter
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x59,
	0x01, // Sky Boundary Parameter
	0x02,
	0x49,
	0x01,
	0x00,
	0x60,
	0x01,
	0x02,
	0x5A,
	0x01,
	0x00,
	0x63,
	0x00, // Skin Boundary Parameter
	0x01,
	0x84,
	0x00,
	0x00,
	0xAF,
	0x00,
	0x01,
	0xD2,
	0x00,
	0x00,
	0xD3,
	0x00, // Grass Boundary Parameter
	0x00,
	0x9F,
	0x00,
	0x00,
	0x33,
	0x00,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x72,
	0x00, // Sky Boundary Parameter
	0x01,
	0xAE,
	0x00,
	0x00,
	0x89,
	0x00,
	0x02,
	0x16,
	0x00,
	0x00,
	0xB3,
	0x00, // Skin Boundary Parameter
	0x04,
	0xA8,
	0x00,
	0x18,
	0xE6,
	0x01,
	0x08,
	0x59,
	0x01,
	0x0B,
	0x3E,
	0x00, // Grass Boundary Parameter
	0x0B,
	0x24,
	0x00,
	0x0A,
	0x18,
	0x01,
	0x04,
	0x6A,
	0x01,
	0x06,
	0xCD,
	0x00, // Sky Boundary Parameter
	0x04,
	0x98,
	0x00,
	0x0F,
	0xC1,
	0x01,
	0x06,
	0xE6,
	0x01,
	0x0A,
	0xE1,
	0x67, // Skin Boundary Index
	0x62, // Grass Boundary Index
	0x61, // Sky Boundary Index
	0x76, // Skin Color Gain
	0x80, // Grass Color Gain
	0x80, // Sky Color Gain
	0x73, // Target Skin Color (Cb)
	0x52, // Target Grass Color (Cb)
	0xAE, // Target Sky Color (Cb)
	0x90, // Target Skin Color (Cr)
	0x69, // Target Grass Color (Cr)
	0x58, // Target Sky Color (Cr)
	0x00, // Threshold Value of Skin Color Detection
	0x00, // Threshold Value of Grass Color Detection
	0x00, // Threshold Value of Sky Color Detection
	0x32, // Minimum Y of Skin Brightness Control
	0x1E, // Minimum Y of Grass Brightness Control
	0x1E, // Minimum Y of Sky Brightness Control
	0xDC, // Maximum Y of Skin Brightness Control
	0xC8, // Maximum Y of Grass Brightness Control
	0xC8, // Maximum Y of Sky Brightness Control
	0x82, // Reference Y of Skin Brightness Control
	0x78, // Reference Y of Grass Brightness Control
	0x78, // Reference Y of Sky Brightness Control
	0x94, // Target Y of Skin Brihgtness Contol
	0x78, // Target Y of Grass Brihgtness Contol
	0x78, // Target Y of Sky Brihgtness Contol
	0x01, // Brightness Parameter
	0x48,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xD6,
	0x00,
	0x80,
	0x00,
	0x80,
	0x0D,
	0xC0,
	0x00,
	0x00,
	0x00,
	0x00,
	0x9C,
	0xCD,
	0x80,
	0x00,
	0x80,
	0x00,
	0x66,
	0x66,
	0x80,
	0x00,
	0x80,
	0x00,
};

static unsigned char LEVEL_0_UNLOCK[] = {
	0x9F,
	0xa5, 0xa5
};

static unsigned char LEVEL_0_LOCK[] = {
	0x9F,
	0x5a, 0x5a
};

static unsigned char LEVEL_1_UNLOCK[] = {
	0xF0,
	0x5a, 0x5a
};

static unsigned char LEVEL_1_LOCK[] = {
	0xF0,
	0xa5, 0xa5
};

#define MDNIE_SET(id)	\
{							\
	.name		= __stringify(id),				\
	.seq		= {				\
		{	.dsi_msg.tx_buf = LEVEL_0_UNLOCK,	.dsi_msg.tx_len = ARRAY_SIZE(LEVEL_0_UNLOCK),},	\
		{	.dsi_msg.tx_buf = LEVEL_1_UNLOCK,	.dsi_msg.tx_len = ARRAY_SIZE(LEVEL_1_UNLOCK),},	\
		{	.dsi_msg.tx_buf = id##_1,		.dsi_msg.tx_len = ARRAY_SIZE(id##_1),	},	\
		{	.dsi_msg.tx_buf = id##_2,		.dsi_msg.tx_len = ARRAY_SIZE(id##_2),	},	\
		{	.dsi_msg.tx_buf = LEVEL_0_LOCK,	.dsi_msg.tx_len = ARRAY_SIZE(LEVEL_0_LOCK),},	\
		{	.dsi_msg.tx_buf = LEVEL_1_LOCK,	.dsi_msg.tx_len = ARRAY_SIZE(LEVEL_1_LOCK),},	\
	}	\
}

static struct mdnie_table bypass_table[BYPASS_MAX] = {
	[BYPASS_ON] = MDNIE_SET(BYPASS)
};

static struct mdnie_table accessibility_table[ACCESSIBILITY_MAX] = {
	[NEGATIVE] = MDNIE_SET(BYPASS),
	MDNIE_SET(BYPASS),
	MDNIE_SET(SCREEN_CURTAIN),
	MDNIE_SET(BYPASS),
	MDNIE_SET(BYPASS),
	MDNIE_SET(BYPASS)
};

static struct mdnie_table hbm_table[HBM_MAX] = {
	[HBM_ON] = MDNIE_SET(LOCAL_CE)
};

#ifdef CONFIG_SMCDSD_HMD
static struct mdnie_table hmd_table[HMD_MDNIE_MAX] = {
	[HMD_MDNIE_ON] = MDNIE_SET(HMD_6500K),
	MDNIE_SET(HMD_6500K),
	MDNIE_SET(HMD_6500K),
	MDNIE_SET(HMD_6500K)
};
#endif

static struct mdnie_table dmb_table[MODE_MAX] = {
	MDNIE_SET(DYNAMIC_UI),
	MDNIE_SET(DYNAMIC_UI),
	MDNIE_SET(NATURAL_UI),
	MDNIE_SET(AUTO_GALLERY),
	MDNIE_SET(AUTO_GALLERY),
	MDNIE_SET(AUTO_EBOOK)
};


static struct mdnie_table night_table[NIGHT_MODE_MAX] = {
	[NIGHT_MODE_ON] = MDNIE_SET(NIGHT_MODE)
};

static struct mdnie_table lens_table[COLOR_LENS_MAX] = {
	[COLOR_LENS_ON] = MDNIE_SET(COLOR_LENS)
};

static struct mdnie_table light_notification_table[LIGHT_NOTIFICATION_MAX] = {
	[LIGHT_NOTIFICATION_ON] = MDNIE_SET(LIGHT_NOTIFICATION)
};

static struct mdnie_table main_table[SCENARIO_MAX][MODE_MAX] = {
	{
		MDNIE_SET(DYNAMIC_UI),
		MDNIE_SET(DYNAMIC_UI),
		MDNIE_SET(NATURAL_UI),
		MDNIE_SET(AUTO_UI),
		MDNIE_SET(AUTO_UI),
		MDNIE_SET(AUTO_EBOOK)
	}, {
		MDNIE_SET(DYNAMIC_UI),
		MDNIE_SET(DYNAMIC_UI),
		MDNIE_SET(NATURAL_UI),
		MDNIE_SET(AUTO_UI),
		MDNIE_SET(AUTO_GALLERY),
		MDNIE_SET(AUTO_EBOOK)
	},
	[CAMERA_MODE] = {
		MDNIE_SET(DYNAMIC_UI),
		MDNIE_SET(DYNAMIC_UI),
		MDNIE_SET(NATURAL_UI),
		MDNIE_SET(AUTO_UI),
		MDNIE_SET(AUTO_GALLERY),
		MDNIE_SET(AUTO_EBOOK)
	},
	[GALLERY_MODE] = {
		MDNIE_SET(DYNAMIC_UI),
		MDNIE_SET(DYNAMIC_UI),
		MDNIE_SET(NATURAL_UI),
		MDNIE_SET(AUTO_UI),
		MDNIE_SET(AUTO_GALLERY),
		MDNIE_SET(AUTO_EBOOK)
	}, {
		MDNIE_SET(DYNAMIC_UI),
		MDNIE_SET(DYNAMIC_UI),
		MDNIE_SET(NATURAL_UI),
		MDNIE_SET(AUTO_UI),
		MDNIE_SET(AUTO_UI),
		MDNIE_SET(AUTO_EBOOK)
	}, {
		MDNIE_SET(DYNAMIC_UI),
		MDNIE_SET(DYNAMIC_UI),
		MDNIE_SET(NATURAL_UI),
		MDNIE_SET(AUTO_UI),
		MDNIE_SET(AUTO_GALLERY),
		MDNIE_SET(AUTO_EBOOK)
	}, {
		MDNIE_SET(DYNAMIC_UI),
		MDNIE_SET(DYNAMIC_UI),
		MDNIE_SET(NATURAL_UI),
		MDNIE_SET(AUTO_UI),
		MDNIE_SET(AUTO_EBOOK),
		MDNIE_SET(AUTO_EBOOK)
	}, {
		MDNIE_SET(DYNAMIC_UI),
		MDNIE_SET(DYNAMIC_UI),
		MDNIE_SET(NATURAL_UI),
		MDNIE_SET(AUTO_UI),
		MDNIE_SET(AUTO_UI),
		MDNIE_SET(AUTO_EBOOK)
	}
};

#undef MDNIE_SET

static struct mdnie_tune tune_info = {
	.bypass_table = bypass_table,
	.accessibility_table = accessibility_table,
	.hbm_table = hbm_table,
	.night_table = night_table,
	.lens_table = lens_table,
	.light_notification_table = light_notification_table,

#ifdef CONFIG_SMCDSD_HMD
	.hmd_table = hmd_table,
#endif
	.dmb_table = dmb_table,
	.main_table = main_table,

	.coordinate_table = coordinate_data,
	.adjust_ldu_table = adjust_ldu_data,
	.night_mode_table = night_mode_data,
	.color_lens_table = color_lens_data,
	.scr_info = &scr_info,
	.get_hbm_index = get_hbm_index,
	.night_info = &night_info,
	.color_lens_info = &color_lens_info,
	.color_offset = {NULL, color_offset_f1, color_offset_f2, color_offset_f3, color_offset_f4}
};
#endif